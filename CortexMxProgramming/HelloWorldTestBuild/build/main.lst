ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB140:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_host.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** I2S_HandleTypeDef hi2s3;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_I2C1_Init(void);
  60:Core/Src/main.c **** static void MX_I2S3_Init(void);
  61:Core/Src/main.c **** static void MX_SPI1_Init(void);
  62:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  63:Core/Src/main.c **** void MX_USB_HOST_Process(void);
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.c ****   HAL_Init();
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Configure the system clock */
  95:Core/Src/main.c ****   SystemClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
 103:Core/Src/main.c ****   MX_I2C1_Init();
 104:Core/Src/main.c ****   MX_I2S3_Init();
 105:Core/Src/main.c ****   MX_SPI1_Init();
 106:Core/Src/main.c ****   MX_USART2_UART_Init();
 107:Core/Src/main.c ****   MX_USB_HOST_Init();
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   // The string we want to send
 111:Core/Src/main.c ****   char msg[] = "HelloWorldTestBuild!\r\n";
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Infinite loop */
 116:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 117:Core/Src/main.c ****   while (1)
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     /* USER CODE END WHILE */
 120:Core/Src/main.c ****     MX_USB_HOST_Process();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 123:Core/Src/main.c ****     // Transmit the string over UART2
 124:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t*)msg, sizeof(msg) - 1, HAL_MAX_DELAY);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     // Add a small delay so we don't flood the terminal
 127:Core/Src/main.c ****     HAL_Delay(1000);
 128:Core/Src/main.c ****   
 129:Core/Src/main.c ****     
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   /* USER CODE END 3 */
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****   * @brief System Clock Configuration
 136:Core/Src/main.c ****   * @retval None
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c **** void SystemClock_Config(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 4


 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 149:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 165:Core/Src/main.c ****   */
 166:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 174:Core/Src/main.c ****   {
 175:Core/Src/main.c ****     Error_Handler();
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 181:Core/Src/main.c ****   * @param None
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** static void MX_I2C1_Init(void)
 185:Core/Src/main.c **** {
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 194:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 195:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 196:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 197:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 198:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 199:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 200:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 201:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 202:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 5


 203:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** /**
 214:Core/Src/main.c ****   * @brief I2S3 Initialization Function
 215:Core/Src/main.c ****   * @param None
 216:Core/Src/main.c ****   * @retval None
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c **** static void MX_I2S3_Init(void)
 219:Core/Src/main.c **** {
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE BEGIN I2S3_Init 0 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE END I2S3_Init 0 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN I2S3_Init 1 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END I2S3_Init 1 */
 228:Core/Src/main.c ****   hi2s3.Instance = SPI3;
 229:Core/Src/main.c ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 230:Core/Src/main.c ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 231:Core/Src/main.c ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 232:Core/Src/main.c ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 233:Core/Src/main.c ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 234:Core/Src/main.c ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 235:Core/Src/main.c ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 236:Core/Src/main.c ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 237:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c ****   /* USER CODE BEGIN I2S3_Init 2 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END I2S3_Init 2 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /**
 248:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 249:Core/Src/main.c ****   * @param None
 250:Core/Src/main.c ****   * @retval None
 251:Core/Src/main.c ****   */
 252:Core/Src/main.c **** static void MX_SPI1_Init(void)
 253:Core/Src/main.c **** {
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 262:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 263:Core/Src/main.c ****   hspi1.Instance = SPI1;
 264:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 265:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 266:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 267:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 268:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 269:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 270:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 271:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 272:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 273:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 274:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 275:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /**
 286:Core/Src/main.c ****   * @brief USART2 Initialization Function
 287:Core/Src/main.c ****   * @param None
 288:Core/Src/main.c ****   * @retval None
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 291:Core/Src/main.c **** {
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 300:Core/Src/main.c ****   huart2.Instance = USART2;
 301:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 302:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 303:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 304:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 305:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 306:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 307:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 308:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****     Error_Handler();
 311:Core/Src/main.c ****   }
 312:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** }
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** /**
 319:Core/Src/main.c ****   * @brief GPIO Initialization Function
 320:Core/Src/main.c ****   * @param None
 321:Core/Src/main.c ****   * @retval None
 322:Core/Src/main.c ****   */
 323:Core/Src/main.c **** static void MX_GPIO_Init(void)
 324:Core/Src/main.c **** {
  28              		.loc 1 324 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 8DB0     		sub	sp, sp, #52
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 88
 325:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 325 3 view .LVU1
  48              		.loc 1 325 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0794     		str	r4, [sp, #28]
  51 000a 0894     		str	r4, [sp, #32]
  52 000c 0994     		str	r4, [sp, #36]
  53 000e 0A94     		str	r4, [sp, #40]
  54 0010 0B94     		str	r4, [sp, #44]
 326:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 327:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 330:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  55              		.loc 1 330 3 is_stmt 1 view .LVU3
  56              	.LBB4:
  57              		.loc 1 330 3 view .LVU4
  58 0012 0194     		str	r4, [sp, #4]
  59              		.loc 1 330 3 view .LVU5
  60 0014 564B     		ldr	r3, .L3
  61 0016 1A6B     		ldr	r2, [r3, #48]
  62 0018 42F01002 		orr	r2, r2, #16
  63 001c 1A63     		str	r2, [r3, #48]
  64              		.loc 1 330 3 view .LVU6
  65 001e 1A6B     		ldr	r2, [r3, #48]
  66 0020 02F01002 		and	r2, r2, #16
  67 0024 0192     		str	r2, [sp, #4]
  68              		.loc 1 330 3 view .LVU7
  69 0026 019A     		ldr	r2, [sp, #4]
  70              	.LBE4:
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 8


  71              		.loc 1 330 3 view .LVU8
 331:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  72              		.loc 1 331 3 view .LVU9
  73              	.LBB5:
  74              		.loc 1 331 3 view .LVU10
  75 0028 0294     		str	r4, [sp, #8]
  76              		.loc 1 331 3 view .LVU11
  77 002a 1A6B     		ldr	r2, [r3, #48]
  78 002c 42F00402 		orr	r2, r2, #4
  79 0030 1A63     		str	r2, [r3, #48]
  80              		.loc 1 331 3 view .LVU12
  81 0032 1A6B     		ldr	r2, [r3, #48]
  82 0034 02F00402 		and	r2, r2, #4
  83 0038 0292     		str	r2, [sp, #8]
  84              		.loc 1 331 3 view .LVU13
  85 003a 029A     		ldr	r2, [sp, #8]
  86              	.LBE5:
  87              		.loc 1 331 3 view .LVU14
 332:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  88              		.loc 1 332 3 view .LVU15
  89              	.LBB6:
  90              		.loc 1 332 3 view .LVU16
  91 003c 0394     		str	r4, [sp, #12]
  92              		.loc 1 332 3 view .LVU17
  93 003e 1A6B     		ldr	r2, [r3, #48]
  94 0040 42F08002 		orr	r2, r2, #128
  95 0044 1A63     		str	r2, [r3, #48]
  96              		.loc 1 332 3 view .LVU18
  97 0046 1A6B     		ldr	r2, [r3, #48]
  98 0048 02F08002 		and	r2, r2, #128
  99 004c 0392     		str	r2, [sp, #12]
 100              		.loc 1 332 3 view .LVU19
 101 004e 039A     		ldr	r2, [sp, #12]
 102              	.LBE6:
 103              		.loc 1 332 3 view .LVU20
 333:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 104              		.loc 1 333 3 view .LVU21
 105              	.LBB7:
 106              		.loc 1 333 3 view .LVU22
 107 0050 0494     		str	r4, [sp, #16]
 108              		.loc 1 333 3 view .LVU23
 109 0052 1A6B     		ldr	r2, [r3, #48]
 110 0054 42F00102 		orr	r2, r2, #1
 111 0058 1A63     		str	r2, [r3, #48]
 112              		.loc 1 333 3 view .LVU24
 113 005a 1A6B     		ldr	r2, [r3, #48]
 114 005c 02F00102 		and	r2, r2, #1
 115 0060 0492     		str	r2, [sp, #16]
 116              		.loc 1 333 3 view .LVU25
 117 0062 049A     		ldr	r2, [sp, #16]
 118              	.LBE7:
 119              		.loc 1 333 3 view .LVU26
 334:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 120              		.loc 1 334 3 view .LVU27
 121              	.LBB8:
 122              		.loc 1 334 3 view .LVU28
 123 0064 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 9


 124              		.loc 1 334 3 view .LVU29
 125 0066 1A6B     		ldr	r2, [r3, #48]
 126 0068 42F00202 		orr	r2, r2, #2
 127 006c 1A63     		str	r2, [r3, #48]
 128              		.loc 1 334 3 view .LVU30
 129 006e 1A6B     		ldr	r2, [r3, #48]
 130 0070 02F00202 		and	r2, r2, #2
 131 0074 0592     		str	r2, [sp, #20]
 132              		.loc 1 334 3 view .LVU31
 133 0076 059A     		ldr	r2, [sp, #20]
 134              	.LBE8:
 135              		.loc 1 334 3 view .LVU32
 335:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 136              		.loc 1 335 3 view .LVU33
 137              	.LBB9:
 138              		.loc 1 335 3 view .LVU34
 139 0078 0694     		str	r4, [sp, #24]
 140              		.loc 1 335 3 view .LVU35
 141 007a 1A6B     		ldr	r2, [r3, #48]
 142 007c 42F00802 		orr	r2, r2, #8
 143 0080 1A63     		str	r2, [r3, #48]
 144              		.loc 1 335 3 view .LVU36
 145 0082 1B6B     		ldr	r3, [r3, #48]
 146 0084 03F00803 		and	r3, r3, #8
 147 0088 0693     		str	r3, [sp, #24]
 148              		.loc 1 335 3 view .LVU37
 149 008a 069B     		ldr	r3, [sp, #24]
 150              	.LBE9:
 151              		.loc 1 335 3 view .LVU38
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 338:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_I2C_SPI_GPIO_Port, CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 152              		.loc 1 338 3 view .LVU39
 153 008c 394E     		ldr	r6, .L3+4
 154 008e 2246     		mov	r2, r4
 155 0090 0821     		movs	r1, #8
 156 0092 3046     		mov	r0, r6
 157 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 158              	.LVL0:
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 341:Core/Src/main.c ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 159              		.loc 1 341 3 view .LVU40
 160 0098 DFF8E090 		ldr	r9, .L3+12
 161 009c 0122     		movs	r2, #1
 162 009e 1146     		mov	r1, r2
 163 00a0 4846     		mov	r0, r9
 164 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL1:
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 344:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin
 166              		.loc 1 344 3 view .LVU41
 167 00a6 DFF8D880 		ldr	r8, .L3+16
 168 00aa 2246     		mov	r2, r4
 169 00ac 4FF21001 		movw	r1, #61456
 170 00b0 4046     		mov	r0, r8
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 10


 171 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL2:
 345:Core/Src/main.c ****                           |Audio_RST_Pin, GPIO_PIN_RESET);
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /*Configure GPIO pin : CS_I2C_SPI_Pin */
 348:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_I2C_SPI_Pin;
 173              		.loc 1 348 3 view .LVU42
 174              		.loc 1 348 23 is_stmt 0 view .LVU43
 175 00b6 0827     		movs	r7, #8
 176 00b8 0797     		str	r7, [sp, #28]
 349:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 177              		.loc 1 349 3 is_stmt 1 view .LVU44
 178              		.loc 1 349 24 is_stmt 0 view .LVU45
 179 00ba 0125     		movs	r5, #1
 180 00bc 0895     		str	r5, [sp, #32]
 350:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 350 3 is_stmt 1 view .LVU46
 182              		.loc 1 350 24 is_stmt 0 view .LVU47
 183 00be 0994     		str	r4, [sp, #36]
 351:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 184              		.loc 1 351 3 is_stmt 1 view .LVU48
 185              		.loc 1 351 25 is_stmt 0 view .LVU49
 186 00c0 0A94     		str	r4, [sp, #40]
 352:Core/Src/main.c ****   HAL_GPIO_Init(CS_I2C_SPI_GPIO_Port, &GPIO_InitStruct);
 187              		.loc 1 352 3 is_stmt 1 view .LVU50
 188 00c2 07A9     		add	r1, sp, #28
 189 00c4 3046     		mov	r0, r6
 190 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 191              	.LVL3:
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 355:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 192              		.loc 1 355 3 view .LVU51
 193              		.loc 1 355 23 is_stmt 0 view .LVU52
 194 00ca 0795     		str	r5, [sp, #28]
 356:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 195              		.loc 1 356 3 is_stmt 1 view .LVU53
 196              		.loc 1 356 24 is_stmt 0 view .LVU54
 197 00cc 0895     		str	r5, [sp, #32]
 357:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 198              		.loc 1 357 3 is_stmt 1 view .LVU55
 199              		.loc 1 357 24 is_stmt 0 view .LVU56
 200 00ce 0994     		str	r4, [sp, #36]
 358:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 201              		.loc 1 358 3 is_stmt 1 view .LVU57
 202              		.loc 1 358 25 is_stmt 0 view .LVU58
 203 00d0 0A94     		str	r4, [sp, #40]
 359:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 204              		.loc 1 359 3 is_stmt 1 view .LVU59
 205 00d2 07A9     		add	r1, sp, #28
 206 00d4 4846     		mov	r0, r9
 207 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL4:
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /*Configure GPIO pin : PDM_OUT_Pin */
 362:Core/Src/main.c ****   GPIO_InitStruct.Pin = PDM_OUT_Pin;
 209              		.loc 1 362 3 view .LVU60
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 11


 210              		.loc 1 362 23 is_stmt 0 view .LVU61
 211 00da 0797     		str	r7, [sp, #28]
 363:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 212              		.loc 1 363 3 is_stmt 1 view .LVU62
 213              		.loc 1 363 24 is_stmt 0 view .LVU63
 214 00dc 0227     		movs	r7, #2
 215 00de 0897     		str	r7, [sp, #32]
 364:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 216              		.loc 1 364 3 is_stmt 1 view .LVU64
 217              		.loc 1 364 24 is_stmt 0 view .LVU65
 218 00e0 0994     		str	r4, [sp, #36]
 365:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 219              		.loc 1 365 3 is_stmt 1 view .LVU66
 220              		.loc 1 365 25 is_stmt 0 view .LVU67
 221 00e2 0A94     		str	r4, [sp, #40]
 366:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 222              		.loc 1 366 3 is_stmt 1 view .LVU68
 223              		.loc 1 366 29 is_stmt 0 view .LVU69
 224 00e4 4FF0050A 		mov	r10, #5
 225 00e8 CDF82CA0 		str	r10, [sp, #44]
 367:Core/Src/main.c ****   HAL_GPIO_Init(PDM_OUT_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 367 3 is_stmt 1 view .LVU70
 227 00ec 07A9     		add	r1, sp, #28
 228 00ee 4846     		mov	r0, r9
 229 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL5:
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 370:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 231              		.loc 1 370 3 view .LVU71
 232              		.loc 1 370 23 is_stmt 0 view .LVU72
 233 00f4 0795     		str	r5, [sp, #28]
 371:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 234              		.loc 1 371 3 is_stmt 1 view .LVU73
 235              		.loc 1 371 24 is_stmt 0 view .LVU74
 236 00f6 4FF49019 		mov	r9, #1179648
 237 00fa CDF82090 		str	r9, [sp, #32]
 372:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 238              		.loc 1 372 3 is_stmt 1 view .LVU75
 239              		.loc 1 372 24 is_stmt 0 view .LVU76
 240 00fe 0994     		str	r4, [sp, #36]
 373:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 241              		.loc 1 373 3 is_stmt 1 view .LVU77
 242 0100 07A9     		add	r1, sp, #28
 243 0102 1D48     		ldr	r0, .L3+8
 244 0104 FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL6:
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /*Configure GPIO pin : BOOT1_Pin */
 376:Core/Src/main.c ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 246              		.loc 1 376 3 view .LVU78
 247              		.loc 1 376 23 is_stmt 0 view .LVU79
 248 0108 0423     		movs	r3, #4
 249 010a 0793     		str	r3, [sp, #28]
 377:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 250              		.loc 1 377 3 is_stmt 1 view .LVU80
 251              		.loc 1 377 24 is_stmt 0 view .LVU81
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 12


 252 010c 0894     		str	r4, [sp, #32]
 378:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 378 3 is_stmt 1 view .LVU82
 254              		.loc 1 378 24 is_stmt 0 view .LVU83
 255 010e 0994     		str	r4, [sp, #36]
 379:Core/Src/main.c ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 256              		.loc 1 379 3 is_stmt 1 view .LVU84
 257 0110 DFF870B0 		ldr	fp, .L3+20
 258 0114 07A9     		add	r1, sp, #28
 259 0116 5846     		mov	r0, fp
 260 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 261              	.LVL7:
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /*Configure GPIO pin : CLK_IN_Pin */
 382:Core/Src/main.c ****   GPIO_InitStruct.Pin = CLK_IN_Pin;
 262              		.loc 1 382 3 view .LVU85
 263              		.loc 1 382 23 is_stmt 0 view .LVU86
 264 011c 4FF48063 		mov	r3, #1024
 265 0120 0793     		str	r3, [sp, #28]
 383:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 266              		.loc 1 383 3 is_stmt 1 view .LVU87
 267              		.loc 1 383 24 is_stmt 0 view .LVU88
 268 0122 0897     		str	r7, [sp, #32]
 384:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 269              		.loc 1 384 3 is_stmt 1 view .LVU89
 270              		.loc 1 384 24 is_stmt 0 view .LVU90
 271 0124 0994     		str	r4, [sp, #36]
 385:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 272              		.loc 1 385 3 is_stmt 1 view .LVU91
 273              		.loc 1 385 25 is_stmt 0 view .LVU92
 274 0126 0A94     		str	r4, [sp, #40]
 386:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 275              		.loc 1 386 3 is_stmt 1 view .LVU93
 276              		.loc 1 386 29 is_stmt 0 view .LVU94
 277 0128 CDF82CA0 		str	r10, [sp, #44]
 387:Core/Src/main.c ****   HAL_GPIO_Init(CLK_IN_GPIO_Port, &GPIO_InitStruct);
 278              		.loc 1 387 3 is_stmt 1 view .LVU95
 279 012c 07A9     		add	r1, sp, #28
 280 012e 5846     		mov	r0, fp
 281 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 282              	.LVL8:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /*Configure GPIO pins : LD4_Pin LD3_Pin LD5_Pin LD6_Pin
 390:Core/Src/main.c ****                            Audio_RST_Pin */
 391:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin
 283              		.loc 1 391 3 view .LVU96
 284              		.loc 1 391 23 is_stmt 0 view .LVU97
 285 0134 4FF21003 		movw	r3, #61456
 286 0138 0793     		str	r3, [sp, #28]
 392:Core/Src/main.c ****                           |Audio_RST_Pin;
 393:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 287              		.loc 1 393 3 is_stmt 1 view .LVU98
 288              		.loc 1 393 24 is_stmt 0 view .LVU99
 289 013a 0895     		str	r5, [sp, #32]
 394:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 394 3 is_stmt 1 view .LVU100
 291              		.loc 1 394 24 is_stmt 0 view .LVU101
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 13


 292 013c 0994     		str	r4, [sp, #36]
 395:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 293              		.loc 1 395 3 is_stmt 1 view .LVU102
 294              		.loc 1 395 25 is_stmt 0 view .LVU103
 295 013e 0A94     		str	r4, [sp, #40]
 396:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 296              		.loc 1 396 3 is_stmt 1 view .LVU104
 297 0140 07A9     		add	r1, sp, #28
 298 0142 4046     		mov	r0, r8
 299 0144 FFF7FEFF 		bl	HAL_GPIO_Init
 300              	.LVL9:
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
 399:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 301              		.loc 1 399 3 view .LVU105
 302              		.loc 1 399 23 is_stmt 0 view .LVU106
 303 0148 2023     		movs	r3, #32
 304 014a 0793     		str	r3, [sp, #28]
 400:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 305              		.loc 1 400 3 is_stmt 1 view .LVU107
 306              		.loc 1 400 24 is_stmt 0 view .LVU108
 307 014c 0894     		str	r4, [sp, #32]
 401:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 308              		.loc 1 401 3 is_stmt 1 view .LVU109
 309              		.loc 1 401 24 is_stmt 0 view .LVU110
 310 014e 0994     		str	r4, [sp, #36]
 402:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 311              		.loc 1 402 3 is_stmt 1 view .LVU111
 312 0150 07A9     		add	r1, sp, #28
 313 0152 4046     		mov	r0, r8
 314 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL10:
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /*Configure GPIO pin : MEMS_INT2_Pin */
 405:Core/Src/main.c ****   GPIO_InitStruct.Pin = MEMS_INT2_Pin;
 316              		.loc 1 405 3 view .LVU112
 317              		.loc 1 405 23 is_stmt 0 view .LVU113
 318 0158 0797     		str	r7, [sp, #28]
 406:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 319              		.loc 1 406 3 is_stmt 1 view .LVU114
 320              		.loc 1 406 24 is_stmt 0 view .LVU115
 321 015a CDF82090 		str	r9, [sp, #32]
 407:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 322              		.loc 1 407 3 is_stmt 1 view .LVU116
 323              		.loc 1 407 24 is_stmt 0 view .LVU117
 324 015e 0994     		str	r4, [sp, #36]
 408:Core/Src/main.c ****   HAL_GPIO_Init(MEMS_INT2_GPIO_Port, &GPIO_InitStruct);
 325              		.loc 1 408 3 is_stmt 1 view .LVU118
 326 0160 07A9     		add	r1, sp, #28
 327 0162 3046     		mov	r0, r6
 328 0164 FFF7FEFF 		bl	HAL_GPIO_Init
 329              	.LVL11:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 411:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 412:Core/Src/main.c **** }
 330              		.loc 1 412 1 is_stmt 0 view .LVU119
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 14


 331 0168 0DB0     		add	sp, sp, #52
 332              	.LCFI2:
 333              		.cfi_def_cfa_offset 36
 334              		@ sp needed
 335 016a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 336              	.L4:
 337 016e 00BF     		.align	2
 338              	.L3:
 339 0170 00380240 		.word	1073887232
 340 0174 00100240 		.word	1073876992
 341 0178 00000240 		.word	1073872896
 342 017c 00080240 		.word	1073874944
 343 0180 000C0240 		.word	1073875968
 344 0184 00040240 		.word	1073873920
 345              		.cfi_endproc
 346              	.LFE140:
 348              		.section	.text.Error_Handler,"ax",%progbits
 349              		.align	1
 350              		.global	Error_Handler
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 355              	Error_Handler:
 356              	.LFB141:
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** /* USER CODE END 4 */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c **** /**
 419:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 420:Core/Src/main.c ****   * @retval None
 421:Core/Src/main.c ****   */
 422:Core/Src/main.c **** void Error_Handler(void)
 423:Core/Src/main.c **** {
 357              		.loc 1 423 1 is_stmt 1 view -0
 358              		.cfi_startproc
 359              		@ Volatile: function does not return.
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 424:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 425:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 426:Core/Src/main.c ****   __disable_irq();
 363              		.loc 1 426 3 view .LVU121
 364              	.LBB10:
 365              	.LBI10:
 366              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 15


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 16


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 17


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 18


 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 19


 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 20


 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 21


 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 22


 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 23


 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 24


 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 25


 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 26


 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 27


 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 28


 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 29


 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 30


 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 31


 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 367              		.loc 2 960 27 view .LVU122
 368              	.LBB11:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 369              		.loc 2 962 3 view .LVU123
 370              		.syntax unified
 371              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 372 0000 72B6     		cpsid i
 373              	@ 0 "" 2
 374              		.thumb
 375              		.syntax unified
 376              	.L6:
 377              	.LBE11:
 378              	.LBE10:
 427:Core/Src/main.c ****   while (1)
 379              		.loc 1 427 3 discriminator 1 view .LVU124
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****   }
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 32


 380              		.loc 1 429 3 discriminator 1 view .LVU125
 427:Core/Src/main.c ****   while (1)
 381              		.loc 1 427 9 discriminator 1 view .LVU126
 382 0002 FEE7     		b	.L6
 383              		.cfi_endproc
 384              	.LFE141:
 386              		.section	.text.MX_I2C1_Init,"ax",%progbits
 387              		.align	1
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 392              	MX_I2C1_Init:
 393              	.LFB136:
 185:Core/Src/main.c **** 
 394              		.loc 1 185 1 view -0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 08B5     		push	{r3, lr}
 399              	.LCFI3:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 3, -8
 402              		.cfi_offset 14, -4
 194:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 403              		.loc 1 194 3 view .LVU128
 194:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 404              		.loc 1 194 18 is_stmt 0 view .LVU129
 405 0002 0A48     		ldr	r0, .L11
 406 0004 0A4B     		ldr	r3, .L11+4
 407 0006 0360     		str	r3, [r0]
 195:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 408              		.loc 1 195 3 is_stmt 1 view .LVU130
 195:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 409              		.loc 1 195 25 is_stmt 0 view .LVU131
 410 0008 0A4B     		ldr	r3, .L11+8
 411 000a 4360     		str	r3, [r0, #4]
 196:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 412              		.loc 1 196 3 is_stmt 1 view .LVU132
 196:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 413              		.loc 1 196 24 is_stmt 0 view .LVU133
 414 000c 0023     		movs	r3, #0
 415 000e 8360     		str	r3, [r0, #8]
 197:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 416              		.loc 1 197 3 is_stmt 1 view .LVU134
 197:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 417              		.loc 1 197 26 is_stmt 0 view .LVU135
 418 0010 C360     		str	r3, [r0, #12]
 198:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 419              		.loc 1 198 3 is_stmt 1 view .LVU136
 198:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 420              		.loc 1 198 29 is_stmt 0 view .LVU137
 421 0012 4FF48042 		mov	r2, #16384
 422 0016 0261     		str	r2, [r0, #16]
 199:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 423              		.loc 1 199 3 is_stmt 1 view .LVU138
 199:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 424              		.loc 1 199 30 is_stmt 0 view .LVU139
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 33


 425 0018 4361     		str	r3, [r0, #20]
 200:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 426              		.loc 1 200 3 is_stmt 1 view .LVU140
 200:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 427              		.loc 1 200 26 is_stmt 0 view .LVU141
 428 001a 8361     		str	r3, [r0, #24]
 201:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 429              		.loc 1 201 3 is_stmt 1 view .LVU142
 201:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 430              		.loc 1 201 30 is_stmt 0 view .LVU143
 431 001c C361     		str	r3, [r0, #28]
 202:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 432              		.loc 1 202 3 is_stmt 1 view .LVU144
 202:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 433              		.loc 1 202 28 is_stmt 0 view .LVU145
 434 001e 0362     		str	r3, [r0, #32]
 203:Core/Src/main.c ****   {
 435              		.loc 1 203 3 is_stmt 1 view .LVU146
 203:Core/Src/main.c ****   {
 436              		.loc 1 203 7 is_stmt 0 view .LVU147
 437 0020 FFF7FEFF 		bl	HAL_I2C_Init
 438              	.LVL12:
 203:Core/Src/main.c ****   {
 439              		.loc 1 203 6 view .LVU148
 440 0024 00B9     		cbnz	r0, .L10
 211:Core/Src/main.c **** 
 441              		.loc 1 211 1 view .LVU149
 442 0026 08BD     		pop	{r3, pc}
 443              	.L10:
 205:Core/Src/main.c ****   }
 444              		.loc 1 205 5 is_stmt 1 view .LVU150
 445 0028 FFF7FEFF 		bl	Error_Handler
 446              	.LVL13:
 447              	.L12:
 448              		.align	2
 449              	.L11:
 450 002c 00000000 		.word	.LANCHOR0
 451 0030 00540040 		.word	1073763328
 452 0034 A0860100 		.word	100000
 453              		.cfi_endproc
 454              	.LFE136:
 456              		.section	.text.MX_I2S3_Init,"ax",%progbits
 457              		.align	1
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 462              	MX_I2S3_Init:
 463              	.LFB137:
 219:Core/Src/main.c **** 
 464              		.loc 1 219 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 08B5     		push	{r3, lr}
 469              	.LCFI4:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 3, -8
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 34


 472              		.cfi_offset 14, -4
 228:Core/Src/main.c ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 473              		.loc 1 228 3 view .LVU152
 228:Core/Src/main.c ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 474              		.loc 1 228 18 is_stmt 0 view .LVU153
 475 0002 0A48     		ldr	r0, .L17
 476 0004 0A4B     		ldr	r3, .L17+4
 477 0006 0360     		str	r3, [r0]
 229:Core/Src/main.c ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 478              		.loc 1 229 3 is_stmt 1 view .LVU154
 229:Core/Src/main.c ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 479              		.loc 1 229 19 is_stmt 0 view .LVU155
 480 0008 4FF40072 		mov	r2, #512
 481 000c 4260     		str	r2, [r0, #4]
 230:Core/Src/main.c ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 482              		.loc 1 230 3 is_stmt 1 view .LVU156
 230:Core/Src/main.c ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 483              		.loc 1 230 23 is_stmt 0 view .LVU157
 484 000e 0023     		movs	r3, #0
 485 0010 8360     		str	r3, [r0, #8]
 231:Core/Src/main.c ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 486              		.loc 1 231 3 is_stmt 1 view .LVU158
 231:Core/Src/main.c ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 487              		.loc 1 231 25 is_stmt 0 view .LVU159
 488 0012 C360     		str	r3, [r0, #12]
 232:Core/Src/main.c ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 489              		.loc 1 232 3 is_stmt 1 view .LVU160
 232:Core/Src/main.c ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 490              		.loc 1 232 25 is_stmt 0 view .LVU161
 491 0014 0261     		str	r2, [r0, #16]
 233:Core/Src/main.c ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 492              		.loc 1 233 3 is_stmt 1 view .LVU162
 233:Core/Src/main.c ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 493              		.loc 1 233 24 is_stmt 0 view .LVU163
 494 0016 074A     		ldr	r2, .L17+8
 495 0018 4261     		str	r2, [r0, #20]
 234:Core/Src/main.c ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 496              		.loc 1 234 3 is_stmt 1 view .LVU164
 234:Core/Src/main.c ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 497              		.loc 1 234 19 is_stmt 0 view .LVU165
 498 001a 8361     		str	r3, [r0, #24]
 235:Core/Src/main.c ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 499              		.loc 1 235 3 is_stmt 1 view .LVU166
 235:Core/Src/main.c ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 500              		.loc 1 235 26 is_stmt 0 view .LVU167
 501 001c C361     		str	r3, [r0, #28]
 236:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 502              		.loc 1 236 3 is_stmt 1 view .LVU168
 236:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 503              		.loc 1 236 29 is_stmt 0 view .LVU169
 504 001e 0362     		str	r3, [r0, #32]
 237:Core/Src/main.c ****   {
 505              		.loc 1 237 3 is_stmt 1 view .LVU170
 237:Core/Src/main.c ****   {
 506              		.loc 1 237 7 is_stmt 0 view .LVU171
 507 0020 FFF7FEFF 		bl	HAL_I2S_Init
 508              	.LVL14:
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 35


 237:Core/Src/main.c ****   {
 509              		.loc 1 237 6 view .LVU172
 510 0024 00B9     		cbnz	r0, .L16
 245:Core/Src/main.c **** 
 511              		.loc 1 245 1 view .LVU173
 512 0026 08BD     		pop	{r3, pc}
 513              	.L16:
 239:Core/Src/main.c ****   }
 514              		.loc 1 239 5 is_stmt 1 view .LVU174
 515 0028 FFF7FEFF 		bl	Error_Handler
 516              	.LVL15:
 517              	.L18:
 518              		.align	2
 519              	.L17:
 520 002c 00000000 		.word	.LANCHOR1
 521 0030 003C0040 		.word	1073757184
 522 0034 00770100 		.word	96000
 523              		.cfi_endproc
 524              	.LFE137:
 526              		.section	.text.MX_SPI1_Init,"ax",%progbits
 527              		.align	1
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 532              	MX_SPI1_Init:
 533              	.LFB138:
 253:Core/Src/main.c **** 
 534              		.loc 1 253 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538 0000 08B5     		push	{r3, lr}
 539              	.LCFI5:
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 3, -8
 542              		.cfi_offset 14, -4
 263:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 543              		.loc 1 263 3 view .LVU176
 263:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 544              		.loc 1 263 18 is_stmt 0 view .LVU177
 545 0002 0D48     		ldr	r0, .L23
 546 0004 0D4B     		ldr	r3, .L23+4
 547 0006 0360     		str	r3, [r0]
 264:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 548              		.loc 1 264 3 is_stmt 1 view .LVU178
 264:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 549              		.loc 1 264 19 is_stmt 0 view .LVU179
 550 0008 4FF48273 		mov	r3, #260
 551 000c 4360     		str	r3, [r0, #4]
 265:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 552              		.loc 1 265 3 is_stmt 1 view .LVU180
 265:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 553              		.loc 1 265 24 is_stmt 0 view .LVU181
 554 000e 0023     		movs	r3, #0
 555 0010 8360     		str	r3, [r0, #8]
 266:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 556              		.loc 1 266 3 is_stmt 1 view .LVU182
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 36


 266:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 557              		.loc 1 266 23 is_stmt 0 view .LVU183
 558 0012 C360     		str	r3, [r0, #12]
 267:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 559              		.loc 1 267 3 is_stmt 1 view .LVU184
 267:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 560              		.loc 1 267 26 is_stmt 0 view .LVU185
 561 0014 0361     		str	r3, [r0, #16]
 268:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 562              		.loc 1 268 3 is_stmt 1 view .LVU186
 268:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 563              		.loc 1 268 23 is_stmt 0 view .LVU187
 564 0016 4361     		str	r3, [r0, #20]
 269:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 565              		.loc 1 269 3 is_stmt 1 view .LVU188
 269:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 566              		.loc 1 269 18 is_stmt 0 view .LVU189
 567 0018 4FF40072 		mov	r2, #512
 568 001c 8261     		str	r2, [r0, #24]
 270:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 569              		.loc 1 270 3 is_stmt 1 view .LVU190
 270:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 570              		.loc 1 270 32 is_stmt 0 view .LVU191
 571 001e C361     		str	r3, [r0, #28]
 271:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 572              		.loc 1 271 3 is_stmt 1 view .LVU192
 271:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 573              		.loc 1 271 23 is_stmt 0 view .LVU193
 574 0020 0362     		str	r3, [r0, #32]
 272:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 575              		.loc 1 272 3 is_stmt 1 view .LVU194
 272:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 576              		.loc 1 272 21 is_stmt 0 view .LVU195
 577 0022 4362     		str	r3, [r0, #36]
 273:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 578              		.loc 1 273 3 is_stmt 1 view .LVU196
 273:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 579              		.loc 1 273 29 is_stmt 0 view .LVU197
 580 0024 8362     		str	r3, [r0, #40]
 274:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 581              		.loc 1 274 3 is_stmt 1 view .LVU198
 274:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 582              		.loc 1 274 28 is_stmt 0 view .LVU199
 583 0026 0A23     		movs	r3, #10
 584 0028 C362     		str	r3, [r0, #44]
 275:Core/Src/main.c ****   {
 585              		.loc 1 275 3 is_stmt 1 view .LVU200
 275:Core/Src/main.c ****   {
 586              		.loc 1 275 7 is_stmt 0 view .LVU201
 587 002a FFF7FEFF 		bl	HAL_SPI_Init
 588              	.LVL16:
 275:Core/Src/main.c ****   {
 589              		.loc 1 275 6 view .LVU202
 590 002e 00B9     		cbnz	r0, .L22
 283:Core/Src/main.c **** 
 591              		.loc 1 283 1 view .LVU203
 592 0030 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 37


 593              	.L22:
 277:Core/Src/main.c ****   }
 594              		.loc 1 277 5 is_stmt 1 view .LVU204
 595 0032 FFF7FEFF 		bl	Error_Handler
 596              	.LVL17:
 597              	.L24:
 598 0036 00BF     		.align	2
 599              	.L23:
 600 0038 00000000 		.word	.LANCHOR2
 601 003c 00300140 		.word	1073819648
 602              		.cfi_endproc
 603              	.LFE138:
 605              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 606              		.align	1
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 611              	MX_USART2_UART_Init:
 612              	.LFB139:
 291:Core/Src/main.c **** 
 613              		.loc 1 291 1 view -0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617 0000 08B5     		push	{r3, lr}
 618              	.LCFI6:
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 3, -8
 621              		.cfi_offset 14, -4
 300:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 622              		.loc 1 300 3 view .LVU206
 300:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 623              		.loc 1 300 19 is_stmt 0 view .LVU207
 624 0002 0A48     		ldr	r0, .L29
 625 0004 0A4B     		ldr	r3, .L29+4
 626 0006 0360     		str	r3, [r0]
 301:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 627              		.loc 1 301 3 is_stmt 1 view .LVU208
 301:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 628              		.loc 1 301 24 is_stmt 0 view .LVU209
 629 0008 4FF4E133 		mov	r3, #115200
 630 000c 4360     		str	r3, [r0, #4]
 302:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 631              		.loc 1 302 3 is_stmt 1 view .LVU210
 302:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 632              		.loc 1 302 26 is_stmt 0 view .LVU211
 633 000e 0023     		movs	r3, #0
 634 0010 8360     		str	r3, [r0, #8]
 303:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 635              		.loc 1 303 3 is_stmt 1 view .LVU212
 303:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 636              		.loc 1 303 24 is_stmt 0 view .LVU213
 637 0012 C360     		str	r3, [r0, #12]
 304:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 638              		.loc 1 304 3 is_stmt 1 view .LVU214
 304:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 639              		.loc 1 304 22 is_stmt 0 view .LVU215
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 38


 640 0014 0361     		str	r3, [r0, #16]
 305:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 641              		.loc 1 305 3 is_stmt 1 view .LVU216
 305:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 642              		.loc 1 305 20 is_stmt 0 view .LVU217
 643 0016 0C22     		movs	r2, #12
 644 0018 4261     		str	r2, [r0, #20]
 306:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 645              		.loc 1 306 3 is_stmt 1 view .LVU218
 306:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 646              		.loc 1 306 25 is_stmt 0 view .LVU219
 647 001a 8361     		str	r3, [r0, #24]
 307:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 648              		.loc 1 307 3 is_stmt 1 view .LVU220
 307:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 649              		.loc 1 307 28 is_stmt 0 view .LVU221
 650 001c C361     		str	r3, [r0, #28]
 308:Core/Src/main.c ****   {
 651              		.loc 1 308 3 is_stmt 1 view .LVU222
 308:Core/Src/main.c ****   {
 652              		.loc 1 308 7 is_stmt 0 view .LVU223
 653 001e FFF7FEFF 		bl	HAL_UART_Init
 654              	.LVL18:
 308:Core/Src/main.c ****   {
 655              		.loc 1 308 6 view .LVU224
 656 0022 00B9     		cbnz	r0, .L28
 316:Core/Src/main.c **** 
 657              		.loc 1 316 1 view .LVU225
 658 0024 08BD     		pop	{r3, pc}
 659              	.L28:
 310:Core/Src/main.c ****   }
 660              		.loc 1 310 5 is_stmt 1 view .LVU226
 661 0026 FFF7FEFF 		bl	Error_Handler
 662              	.LVL19:
 663              	.L30:
 664 002a 00BF     		.align	2
 665              	.L29:
 666 002c 00000000 		.word	.LANCHOR3
 667 0030 00440040 		.word	1073759232
 668              		.cfi_endproc
 669              	.LFE139:
 671              		.section	.text.SystemClock_Config,"ax",%progbits
 672              		.align	1
 673              		.global	SystemClock_Config
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 678              	SystemClock_Config:
 679              	.LFB135:
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 680              		.loc 1 139 1 view -0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 80
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684 0000 00B5     		push	{lr}
 685              	.LCFI7:
 686              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 39


 687              		.cfi_offset 14, -4
 688 0002 95B0     		sub	sp, sp, #84
 689              	.LCFI8:
 690              		.cfi_def_cfa_offset 88
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 691              		.loc 1 140 3 view .LVU228
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 692              		.loc 1 140 22 is_stmt 0 view .LVU229
 693 0004 3022     		movs	r2, #48
 694 0006 0021     		movs	r1, #0
 695 0008 08A8     		add	r0, sp, #32
 696 000a FFF7FEFF 		bl	memset
 697              	.LVL20:
 141:Core/Src/main.c **** 
 698              		.loc 1 141 3 is_stmt 1 view .LVU230
 141:Core/Src/main.c **** 
 699              		.loc 1 141 22 is_stmt 0 view .LVU231
 700 000e 0023     		movs	r3, #0
 701 0010 0393     		str	r3, [sp, #12]
 702 0012 0493     		str	r3, [sp, #16]
 703 0014 0593     		str	r3, [sp, #20]
 704 0016 0693     		str	r3, [sp, #24]
 705 0018 0793     		str	r3, [sp, #28]
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 706              		.loc 1 145 3 is_stmt 1 view .LVU232
 707              	.LBB12:
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 708              		.loc 1 145 3 view .LVU233
 709 001a 0193     		str	r3, [sp, #4]
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 710              		.loc 1 145 3 view .LVU234
 711 001c 214A     		ldr	r2, .L37
 712 001e 116C     		ldr	r1, [r2, #64]
 713 0020 41F08051 		orr	r1, r1, #268435456
 714 0024 1164     		str	r1, [r2, #64]
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 715              		.loc 1 145 3 view .LVU235
 716 0026 126C     		ldr	r2, [r2, #64]
 717 0028 02F08052 		and	r2, r2, #268435456
 718 002c 0192     		str	r2, [sp, #4]
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 719              		.loc 1 145 3 view .LVU236
 720 002e 019A     		ldr	r2, [sp, #4]
 721              	.LBE12:
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 722              		.loc 1 145 3 view .LVU237
 146:Core/Src/main.c **** 
 723              		.loc 1 146 3 view .LVU238
 724              	.LBB13:
 146:Core/Src/main.c **** 
 725              		.loc 1 146 3 view .LVU239
 726 0030 0293     		str	r3, [sp, #8]
 146:Core/Src/main.c **** 
 727              		.loc 1 146 3 view .LVU240
 728 0032 1D4B     		ldr	r3, .L37+4
 729 0034 1A68     		ldr	r2, [r3]
 730 0036 42F48042 		orr	r2, r2, #16384
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 40


 731 003a 1A60     		str	r2, [r3]
 146:Core/Src/main.c **** 
 732              		.loc 1 146 3 view .LVU241
 733 003c 1B68     		ldr	r3, [r3]
 734 003e 03F48043 		and	r3, r3, #16384
 735 0042 0293     		str	r3, [sp, #8]
 146:Core/Src/main.c **** 
 736              		.loc 1 146 3 view .LVU242
 737 0044 029B     		ldr	r3, [sp, #8]
 738              	.LBE13:
 146:Core/Src/main.c **** 
 739              		.loc 1 146 3 view .LVU243
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 740              		.loc 1 151 3 view .LVU244
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 741              		.loc 1 151 36 is_stmt 0 view .LVU245
 742 0046 0123     		movs	r3, #1
 743 0048 0893     		str	r3, [sp, #32]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 744              		.loc 1 152 3 is_stmt 1 view .LVU246
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 745              		.loc 1 152 30 is_stmt 0 view .LVU247
 746 004a 4FF48033 		mov	r3, #65536
 747 004e 0993     		str	r3, [sp, #36]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 748              		.loc 1 153 3 is_stmt 1 view .LVU248
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 749              		.loc 1 153 34 is_stmt 0 view .LVU249
 750 0050 0223     		movs	r3, #2
 751 0052 0E93     		str	r3, [sp, #56]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 752              		.loc 1 154 3 is_stmt 1 view .LVU250
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 753              		.loc 1 154 35 is_stmt 0 view .LVU251
 754 0054 4FF48002 		mov	r2, #4194304
 755 0058 0F92     		str	r2, [sp, #60]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 756              		.loc 1 155 3 is_stmt 1 view .LVU252
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 757              		.loc 1 155 30 is_stmt 0 view .LVU253
 758 005a 0822     		movs	r2, #8
 759 005c 1092     		str	r2, [sp, #64]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 760              		.loc 1 156 3 is_stmt 1 view .LVU254
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 761              		.loc 1 156 30 is_stmt 0 view .LVU255
 762 005e 4FF4A872 		mov	r2, #336
 763 0062 1192     		str	r2, [sp, #68]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 764              		.loc 1 157 3 is_stmt 1 view .LVU256
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 765              		.loc 1 157 30 is_stmt 0 view .LVU257
 766 0064 1293     		str	r3, [sp, #72]
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 767              		.loc 1 158 3 is_stmt 1 view .LVU258
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 768              		.loc 1 158 30 is_stmt 0 view .LVU259
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 41


 769 0066 0723     		movs	r3, #7
 770 0068 1393     		str	r3, [sp, #76]
 159:Core/Src/main.c ****   {
 771              		.loc 1 159 3 is_stmt 1 view .LVU260
 159:Core/Src/main.c ****   {
 772              		.loc 1 159 7 is_stmt 0 view .LVU261
 773 006a 08A8     		add	r0, sp, #32
 774 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 775              	.LVL21:
 159:Core/Src/main.c ****   {
 776              		.loc 1 159 6 view .LVU262
 777 0070 98B9     		cbnz	r0, .L35
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 778              		.loc 1 166 3 is_stmt 1 view .LVU263
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 779              		.loc 1 166 31 is_stmt 0 view .LVU264
 780 0072 0F23     		movs	r3, #15
 781 0074 0393     		str	r3, [sp, #12]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 782              		.loc 1 168 3 is_stmt 1 view .LVU265
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 783              		.loc 1 168 34 is_stmt 0 view .LVU266
 784 0076 0223     		movs	r3, #2
 785 0078 0493     		str	r3, [sp, #16]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 786              		.loc 1 169 3 is_stmt 1 view .LVU267
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 787              		.loc 1 169 35 is_stmt 0 view .LVU268
 788 007a 0023     		movs	r3, #0
 789 007c 0593     		str	r3, [sp, #20]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 790              		.loc 1 170 3 is_stmt 1 view .LVU269
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 791              		.loc 1 170 36 is_stmt 0 view .LVU270
 792 007e 4FF4A053 		mov	r3, #5120
 793 0082 0693     		str	r3, [sp, #24]
 171:Core/Src/main.c **** 
 794              		.loc 1 171 3 is_stmt 1 view .LVU271
 171:Core/Src/main.c **** 
 795              		.loc 1 171 36 is_stmt 0 view .LVU272
 796 0084 4FF48053 		mov	r3, #4096
 797 0088 0793     		str	r3, [sp, #28]
 173:Core/Src/main.c ****   {
 798              		.loc 1 173 3 is_stmt 1 view .LVU273
 173:Core/Src/main.c ****   {
 799              		.loc 1 173 7 is_stmt 0 view .LVU274
 800 008a 0521     		movs	r1, #5
 801 008c 03A8     		add	r0, sp, #12
 802 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 803              	.LVL22:
 173:Core/Src/main.c ****   {
 804              		.loc 1 173 6 view .LVU275
 805 0092 20B9     		cbnz	r0, .L36
 177:Core/Src/main.c **** 
 806              		.loc 1 177 1 view .LVU276
 807 0094 15B0     		add	sp, sp, #84
 808              	.LCFI9:
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 42


 809              		.cfi_remember_state
 810              		.cfi_def_cfa_offset 4
 811              		@ sp needed
 812 0096 5DF804FB 		ldr	pc, [sp], #4
 813              	.L35:
 814              	.LCFI10:
 815              		.cfi_restore_state
 161:Core/Src/main.c ****   }
 816              		.loc 1 161 5 is_stmt 1 view .LVU277
 817 009a FFF7FEFF 		bl	Error_Handler
 818              	.LVL23:
 819              	.L36:
 175:Core/Src/main.c ****   }
 820              		.loc 1 175 5 view .LVU278
 821 009e FFF7FEFF 		bl	Error_Handler
 822              	.LVL24:
 823              	.L38:
 824 00a2 00BF     		.align	2
 825              	.L37:
 826 00a4 00380240 		.word	1073887232
 827 00a8 00700040 		.word	1073770496
 828              		.cfi_endproc
 829              	.LFE135:
 831              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 832              		.align	2
 833              	.LC0:
 834 0000 48656C6C 		.ascii	"HelloWorldTestBuild!\015\012\000"
 834      6F576F72 
 834      6C645465 
 834      73744275 
 834      696C6421 
 835              		.section	.text.main,"ax",%progbits
 836              		.align	1
 837              		.global	main
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 842              	main:
 843              	.LFB134:
  79:Core/Src/main.c **** 
 844              		.loc 1 79 1 view -0
 845              		.cfi_startproc
 846              		@ Volatile: function does not return.
 847              		@ args = 0, pretend = 0, frame = 24
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849 0000 00B5     		push	{lr}
 850              	.LCFI11:
 851              		.cfi_def_cfa_offset 4
 852              		.cfi_offset 14, -4
 853 0002 87B0     		sub	sp, sp, #28
 854              	.LCFI12:
 855              		.cfi_def_cfa_offset 32
  88:Core/Src/main.c **** 
 856              		.loc 1 88 3 view .LVU280
 857 0004 FFF7FEFF 		bl	HAL_Init
 858              	.LVL25:
  95:Core/Src/main.c **** 
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 43


 859              		.loc 1 95 3 view .LVU281
 860 0008 FFF7FEFF 		bl	SystemClock_Config
 861              	.LVL26:
 102:Core/Src/main.c ****   MX_I2C1_Init();
 862              		.loc 1 102 3 view .LVU282
 863 000c FFF7FEFF 		bl	MX_GPIO_Init
 864              	.LVL27:
 103:Core/Src/main.c ****   MX_I2S3_Init();
 865              		.loc 1 103 3 view .LVU283
 866 0010 FFF7FEFF 		bl	MX_I2C1_Init
 867              	.LVL28:
 104:Core/Src/main.c ****   MX_SPI1_Init();
 868              		.loc 1 104 3 view .LVU284
 869 0014 FFF7FEFF 		bl	MX_I2S3_Init
 870              	.LVL29:
 105:Core/Src/main.c ****   MX_USART2_UART_Init();
 871              		.loc 1 105 3 view .LVU285
 872 0018 FFF7FEFF 		bl	MX_SPI1_Init
 873              	.LVL30:
 106:Core/Src/main.c ****   MX_USB_HOST_Init();
 874              		.loc 1 106 3 view .LVU286
 875 001c FFF7FEFF 		bl	MX_USART2_UART_Init
 876              	.LVL31:
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 877              		.loc 1 107 3 view .LVU287
 878 0020 FFF7FEFF 		bl	MX_USB_HOST_Init
 879              	.LVL32:
 111:Core/Src/main.c **** 
 880              		.loc 1 111 3 view .LVU288
 111:Core/Src/main.c **** 
 881              		.loc 1 111 8 is_stmt 0 view .LVU289
 882 0024 EC46     		mov	ip, sp
 883 0026 0D4C     		ldr	r4, .L42
 884 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 885 002a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 886 002e 94E80300 		ldm	r4, {r0, r1}
 887 0032 4CF8040B 		str	r0, [ip], #4
 888 0036 2CF8021B 		strh	r1, [ip], #2	@ movhi
 889 003a 090C     		lsrs	r1, r1, #16
 890 003c 8CF80010 		strb	r1, [ip]
 891              	.L40:
 117:Core/Src/main.c ****   {
 892              		.loc 1 117 3 is_stmt 1 discriminator 1 view .LVU290
 120:Core/Src/main.c **** 
 893              		.loc 1 120 5 discriminator 1 view .LVU291
 894 0040 FFF7FEFF 		bl	MX_USB_HOST_Process
 895              	.LVL33:
 124:Core/Src/main.c **** 
 896              		.loc 1 124 5 discriminator 1 view .LVU292
 897 0044 4FF0FF33 		mov	r3, #-1
 898 0048 1622     		movs	r2, #22
 899 004a 6946     		mov	r1, sp
 900 004c 0448     		ldr	r0, .L42+4
 901 004e FFF7FEFF 		bl	HAL_UART_Transmit
 902              	.LVL34:
 127:Core/Src/main.c ****   
 903              		.loc 1 127 5 discriminator 1 view .LVU293
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 44


 904 0052 4FF47A70 		mov	r0, #1000
 905 0056 FFF7FEFF 		bl	HAL_Delay
 906              	.LVL35:
 117:Core/Src/main.c ****   {
 907              		.loc 1 117 9 discriminator 1 view .LVU294
 908 005a F1E7     		b	.L40
 909              	.L43:
 910              		.align	2
 911              	.L42:
 912 005c 00000000 		.word	.LC0
 913 0060 00000000 		.word	.LANCHOR3
 914              		.cfi_endproc
 915              	.LFE134:
 917              		.global	huart2
 918              		.global	hspi1
 919              		.global	hi2s3
 920              		.global	hi2c1
 921              		.section	.bss.hi2c1,"aw",%nobits
 922              		.align	2
 923              		.set	.LANCHOR0,. + 0
 926              	hi2c1:
 927 0000 00000000 		.space	84
 927      00000000 
 927      00000000 
 927      00000000 
 927      00000000 
 928              		.section	.bss.hi2s3,"aw",%nobits
 929              		.align	2
 930              		.set	.LANCHOR1,. + 0
 933              	hi2s3:
 934 0000 00000000 		.space	72
 934      00000000 
 934      00000000 
 934      00000000 
 934      00000000 
 935              		.section	.bss.hspi1,"aw",%nobits
 936              		.align	2
 937              		.set	.LANCHOR2,. + 0
 940              	hspi1:
 941 0000 00000000 		.space	88
 941      00000000 
 941      00000000 
 941      00000000 
 941      00000000 
 942              		.section	.bss.huart2,"aw",%nobits
 943              		.align	2
 944              		.set	.LANCHOR3,. + 0
 947              	huart2:
 948 0000 00000000 		.space	72
 948      00000000 
 948      00000000 
 948      00000000 
 948      00000000 
 949              		.text
 950              	.Letext0:
 951              		.file 3 "c:\\dev\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default
 952              		.file 4 "c:\\dev\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 45


 953              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 954              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 955              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 956              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 957              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 958              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 959              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 960              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 961              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 962              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 963              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 964              		.file 16 "USB_HOST/App/usb_host.h"
 965              		.file 17 "<built-in>"
ARM GAS  C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:339    .text.MX_GPIO_Init:00000170 $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:349    .text.Error_Handler:00000000 $t
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:355    .text.Error_Handler:00000000 Error_Handler
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:387    .text.MX_I2C1_Init:00000000 $t
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:392    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:450    .text.MX_I2C1_Init:0000002c $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:457    .text.MX_I2S3_Init:00000000 $t
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:462    .text.MX_I2S3_Init:00000000 MX_I2S3_Init
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:520    .text.MX_I2S3_Init:0000002c $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:527    .text.MX_SPI1_Init:00000000 $t
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:532    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:600    .text.MX_SPI1_Init:00000038 $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:606    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:611    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:666    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:672    .text.SystemClock_Config:00000000 $t
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:678    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:826    .text.SystemClock_Config:000000a4 $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:832    .rodata.main.str1.4:00000000 $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:836    .text.main:00000000 $t
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:842    .text.main:00000000 main
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:912    .text.main:0000005c $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:947    .bss.huart2:00000000 huart2
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:940    .bss.hspi1:00000000 hspi1
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:933    .bss.hi2s3:00000000 hi2s3
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:926    .bss.hi2c1:00000000 hi2c1
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:922    .bss.hi2c1:00000000 $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:929    .bss.hi2s3:00000000 $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:936    .bss.hspi1:00000000 $d
C:\Users\ridel\AppData\Local\Temp\cctg0qNs.s:943    .bss.huart2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
HAL_I2S_Init
HAL_SPI_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_USB_HOST_Init
MX_USB_HOST_Process
HAL_UART_Transmit
HAL_Delay
