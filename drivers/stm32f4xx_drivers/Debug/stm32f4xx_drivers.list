
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000900  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000aa8  08000ab0  00010ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000aa8  08000aa8  00010ab0  2**0
                  CONTENTS
  4 .ARM          00000000  08000aa8  08000aa8  00010ab0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000aa8  08000ab0  00010ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000aa8  08000aa8  00010aa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000aac  08000aac  00010aac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010ab0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010ab0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000caa  00000000  00000000  00010ae0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002dc  00000000  00000000  0001178a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00011a68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000a0  00000000  00000000  00011b30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001e77  00000000  00000000  00011bd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000fda  00000000  00000000  00013a47  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000085c5  00000000  00000000  00014a21  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001cfe6  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000284  00000000  00000000  0001d038  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a90 	.word	0x08000a90

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a90 	.word	0x08000a90

080001e8 <delay>:
#define HIGH 1
#define LOW 0
#define BTN_PRESSED LOW

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	// this will introduce ~200ms delay when system clock is 16MHz
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	0003d08f 	.word	0x0003d08f

08000214 <main>:

int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GPIOBtn;

	memset(&GpioLed,0,sizeof(GpioLed));
 800021a:	f107 030c 	add.w	r3, r7, #12
 800021e:	220c      	movs	r2, #12
 8000220:	2100      	movs	r1, #0
 8000222:	4618      	mov	r0, r3
 8000224:	f000 fc2c 	bl	8000a80 <memset>
	memset(&GPIOBtn,0,sizeof(GpioLed));
 8000228:	463b      	mov	r3, r7
 800022a:	220c      	movs	r2, #12
 800022c:	2100      	movs	r1, #0
 800022e:	4618      	mov	r0, r3
 8000230:	f000 fc26 	bl	8000a80 <memset>

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOD;
 8000234:	4b1a      	ldr	r3, [pc, #104]	; (80002a0 <main+0x8c>)
 8000236:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000238:	230c      	movs	r3, #12
 800023a:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800023c:	2301      	movs	r3, #1
 800023e:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000240:	2300      	movs	r3, #0
 8000242:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000244:	2300      	movs	r3, #0
 8000246:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000248:	2300      	movs	r3, #0
 800024a:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 800024c:	2101      	movs	r1, #1
 800024e:	4814      	ldr	r0, [pc, #80]	; (80002a0 <main+0x8c>)
 8000250:	f000 f864 	bl	800031c <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000254:	f107 030c 	add.w	r3, r7, #12
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f947 	bl	80004ec <GPIO_Init>


	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOA;
 800025e:	4b11      	ldr	r3, [pc, #68]	; (80002a4 <main+0x90>)
 8000260:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000262:	2300      	movs	r3, #0
 8000264:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000266:	2304      	movs	r3, #4
 8000268:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800026a:	2302      	movs	r3, #2
 800026c:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PD;
 800026e:	2302      	movs	r3, #2
 8000270:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA,ENABLE);
 8000272:	2101      	movs	r1, #1
 8000274:	480b      	ldr	r0, [pc, #44]	; (80002a4 <main+0x90>)
 8000276:	f000 f851 	bl	800031c <GPIO_PeriClockControl>

	GPIO_Init(&GPIOBtn);
 800027a:	463b      	mov	r3, r7
 800027c:	4618      	mov	r0, r3
 800027e:	f000 f935 	bl	80004ec <GPIO_Init>

	GPIO_WriteToOutputPin(GPIOD,GPIO_PIN_NO_12,GPIO_PIN_RESET);
 8000282:	2200      	movs	r2, #0
 8000284:	210c      	movs	r1, #12
 8000286:	4806      	ldr	r0, [pc, #24]	; (80002a0 <main+0x8c>)
 8000288:	f000 facc 	bl	8000824 <GPIO_WriteToOutputPin>
	//IRQ configurations
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0,NVIC_IRQ_PRI15);
 800028c:	210f      	movs	r1, #15
 800028e:	2006      	movs	r0, #6
 8000290:	f000 fb88 	bl	80009a4 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0,ENABLE);
 8000294:	2101      	movs	r1, #1
 8000296:	2006      	movs	r0, #6
 8000298:	f000 fafe 	bl	8000898 <GPIO_IRQInterruptConfig>

    while(1);
 800029c:	e7fe      	b.n	800029c <main+0x88>
 800029e:	bf00      	nop
 80002a0:	40020c00 	.word	0x40020c00
 80002a4:	40020000 	.word	0x40020000

080002a8 <EXTI0_IRQHandler>:

}


void EXTI0_IRQHandler(void)
{
 80002a8:	b580      	push	{r7, lr}
 80002aa:	af00      	add	r7, sp, #0
    delay(); //200ms . wait till button de-bouncing gets over
 80002ac:	f7ff ff9c 	bl	80001e8 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_0); //clear the pending event from exti line
 80002b0:	2000      	movs	r0, #0
 80002b2:	f000 fba1 	bl	80009f8 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 80002b6:	210c      	movs	r1, #12
 80002b8:	4802      	ldr	r0, [pc, #8]	; (80002c4 <EXTI0_IRQHandler+0x1c>)
 80002ba:	f000 fad8 	bl	800086e <GPIO_ToggleOutputPin>
}
 80002be:	bf00      	nop
 80002c0:	bd80      	pop	{r7, pc}
 80002c2:	bf00      	nop
 80002c4:	40020c00 	.word	0x40020c00

080002c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c8:	480d      	ldr	r0, [pc, #52]	; (8000300 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ca:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002cc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d0:	480c      	ldr	r0, [pc, #48]	; (8000304 <LoopForever+0x6>)
  ldr r1, =_edata
 80002d2:	490d      	ldr	r1, [pc, #52]	; (8000308 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d4:	4a0d      	ldr	r2, [pc, #52]	; (800030c <LoopForever+0xe>)
  movs r3, #0
 80002d6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d8:	e002      	b.n	80002e0 <LoopCopyDataInit>

080002da <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002da:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002dc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002de:	3304      	adds	r3, #4

080002e0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002e2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e4:	d3f9      	bcc.n	80002da <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e6:	4a0a      	ldr	r2, [pc, #40]	; (8000310 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e8:	4c0a      	ldr	r4, [pc, #40]	; (8000314 <LoopForever+0x16>)
  movs r3, #0
 80002ea:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002ec:	e001      	b.n	80002f2 <LoopFillZerobss>

080002ee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f0:	3204      	adds	r2, #4

080002f2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002f2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f4:	d3fb      	bcc.n	80002ee <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002f6:	f000 fb9f 	bl	8000a38 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002fa:	f7ff ff8b 	bl	8000214 <main>

080002fe <LoopForever>:

LoopForever:
    b LoopForever
 80002fe:	e7fe      	b.n	80002fe <LoopForever>
  ldr   r0, =_estack
 8000300:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000304:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000308:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800030c:	08000ab0 	.word	0x08000ab0
  ldr r2, =_sbss
 8000310:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000314:	2000001c 	.word	0x2000001c

08000318 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000318:	e7fe      	b.n	8000318 <ADC_IRQHandler>
	...

0800031c <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	6078      	str	r0, [r7, #4]
 8000324:	460b      	mov	r3, r1
 8000326:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000328:	78fb      	ldrb	r3, [r7, #3]
 800032a:	2b01      	cmp	r3, #1
 800032c:	d162      	bne.n	80003f4 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a64      	ldr	r2, [pc, #400]	; (80004c4 <GPIO_PeriClockControl+0x1a8>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000336:	4b64      	ldr	r3, [pc, #400]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a63      	ldr	r2, [pc, #396]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 800033c:	f043 0301 	orr.w	r3, r3, #1
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOI_PCLK_DI();
		}
	}

}
 8000342:	e0b9      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a61      	ldr	r2, [pc, #388]	; (80004cc <GPIO_PeriClockControl+0x1b0>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800034c:	4b5e      	ldr	r3, [pc, #376]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a5d      	ldr	r2, [pc, #372]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000352:	f043 0302 	orr.w	r3, r3, #2
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e0ae      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a5c      	ldr	r2, [pc, #368]	; (80004d0 <GPIO_PeriClockControl+0x1b4>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000362:	4b59      	ldr	r3, [pc, #356]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a58      	ldr	r2, [pc, #352]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000368:	f043 0304 	orr.w	r3, r3, #4
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e0a3      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a58      	ldr	r2, [pc, #352]	; (80004d4 <GPIO_PeriClockControl+0x1b8>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d106      	bne.n	8000386 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000378:	4b53      	ldr	r3, [pc, #332]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a52      	ldr	r2, [pc, #328]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 800037e:	f043 0308 	orr.w	r3, r3, #8
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	e098      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a53      	ldr	r2, [pc, #332]	; (80004d8 <GPIO_PeriClockControl+0x1bc>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d106      	bne.n	800039c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800038e:	4b4e      	ldr	r3, [pc, #312]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000392:	4a4d      	ldr	r2, [pc, #308]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000394:	f043 0310 	orr.w	r3, r3, #16
 8000398:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039a:	e08d      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a4f      	ldr	r2, [pc, #316]	; (80004dc <GPIO_PeriClockControl+0x1c0>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d106      	bne.n	80003b2 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003a4:	4b48      	ldr	r3, [pc, #288]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80003a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a8:	4a47      	ldr	r2, [pc, #284]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80003aa:	f043 0320 	orr.w	r3, r3, #32
 80003ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b0:	e082      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4a4a      	ldr	r2, [pc, #296]	; (80004e0 <GPIO_PeriClockControl+0x1c4>)
 80003b6:	4293      	cmp	r3, r2
 80003b8:	d106      	bne.n	80003c8 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003ba:	4b43      	ldr	r3, [pc, #268]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80003bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003be:	4a42      	ldr	r2, [pc, #264]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80003c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003c4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c6:	e077      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4a46      	ldr	r2, [pc, #280]	; (80004e4 <GPIO_PeriClockControl+0x1c8>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d106      	bne.n	80003de <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80003d0:	4b3d      	ldr	r3, [pc, #244]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80003d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d4:	4a3c      	ldr	r2, [pc, #240]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80003d6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003dc:	e06c      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	4a41      	ldr	r2, [pc, #260]	; (80004e8 <GPIO_PeriClockControl+0x1cc>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d168      	bne.n	80004b8 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80003e6:	4b38      	ldr	r3, [pc, #224]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80003e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ea:	4a37      	ldr	r2, [pc, #220]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80003ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003f0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f2:	e061      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	4a33      	ldr	r2, [pc, #204]	; (80004c4 <GPIO_PeriClockControl+0x1a8>)
 80003f8:	4293      	cmp	r3, r2
 80003fa:	d106      	bne.n	800040a <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80003fc:	4b32      	ldr	r3, [pc, #200]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80003fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000400:	4a31      	ldr	r2, [pc, #196]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000402:	f023 0301 	bic.w	r3, r3, #1
 8000406:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000408:	e056      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	4a2f      	ldr	r2, [pc, #188]	; (80004cc <GPIO_PeriClockControl+0x1b0>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d106      	bne.n	8000420 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 8000412:	4b2d      	ldr	r3, [pc, #180]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000414:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000416:	4a2c      	ldr	r2, [pc, #176]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000418:	f023 0302 	bic.w	r3, r3, #2
 800041c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041e:	e04b      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	4a2b      	ldr	r2, [pc, #172]	; (80004d0 <GPIO_PeriClockControl+0x1b4>)
 8000424:	4293      	cmp	r3, r2
 8000426:	d106      	bne.n	8000436 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000428:	4b27      	ldr	r3, [pc, #156]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 800042a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042c:	4a26      	ldr	r2, [pc, #152]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 800042e:	f023 0304 	bic.w	r3, r3, #4
 8000432:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000434:	e040      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4a26      	ldr	r2, [pc, #152]	; (80004d4 <GPIO_PeriClockControl+0x1b8>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d106      	bne.n	800044c <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 800043e:	4b22      	ldr	r3, [pc, #136]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000442:	4a21      	ldr	r2, [pc, #132]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000444:	f023 0308 	bic.w	r3, r3, #8
 8000448:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044a:	e035      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	4a22      	ldr	r2, [pc, #136]	; (80004d8 <GPIO_PeriClockControl+0x1bc>)
 8000450:	4293      	cmp	r3, r2
 8000452:	d106      	bne.n	8000462 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000454:	4b1c      	ldr	r3, [pc, #112]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000458:	4a1b      	ldr	r2, [pc, #108]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 800045a:	f023 0310 	bic.w	r3, r3, #16
 800045e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000460:	e02a      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	4a1d      	ldr	r2, [pc, #116]	; (80004dc <GPIO_PeriClockControl+0x1c0>)
 8000466:	4293      	cmp	r3, r2
 8000468:	d106      	bne.n	8000478 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 800046a:	4b17      	ldr	r3, [pc, #92]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 800046c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800046e:	4a16      	ldr	r2, [pc, #88]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000470:	f023 0320 	bic.w	r3, r3, #32
 8000474:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000476:	e01f      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	4a19      	ldr	r2, [pc, #100]	; (80004e0 <GPIO_PeriClockControl+0x1c4>)
 800047c:	4293      	cmp	r3, r2
 800047e:	d106      	bne.n	800048e <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8000480:	4b11      	ldr	r3, [pc, #68]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000484:	4a10      	ldr	r2, [pc, #64]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000486:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800048a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800048c:	e014      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	4a14      	ldr	r2, [pc, #80]	; (80004e4 <GPIO_PeriClockControl+0x1c8>)
 8000492:	4293      	cmp	r3, r2
 8000494:	d106      	bne.n	80004a4 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000496:	4b0c      	ldr	r3, [pc, #48]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 8000498:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800049a:	4a0b      	ldr	r2, [pc, #44]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 800049c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80004a0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a2:	e009      	b.n	80004b8 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	4a10      	ldr	r2, [pc, #64]	; (80004e8 <GPIO_PeriClockControl+0x1cc>)
 80004a8:	4293      	cmp	r3, r2
 80004aa:	d105      	bne.n	80004b8 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 80004ac:	4b06      	ldr	r3, [pc, #24]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80004ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b0:	4a05      	ldr	r2, [pc, #20]	; (80004c8 <GPIO_PeriClockControl+0x1ac>)
 80004b2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80004b6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004b8:	bf00      	nop
 80004ba:	370c      	adds	r7, #12
 80004bc:	46bd      	mov	sp, r7
 80004be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c2:	4770      	bx	lr
 80004c4:	40020000 	.word	0x40020000
 80004c8:	40023800 	.word	0x40023800
 80004cc:	40020400 	.word	0x40020400
 80004d0:	40020800 	.word	0x40020800
 80004d4:	40020c00 	.word	0x40020c00
 80004d8:	40021000 	.word	0x40021000
 80004dc:	40021400 	.word	0x40021400
 80004e0:	40021800 	.word	0x40021800
 80004e4:	40021c00 	.word	0x40021c00
 80004e8:	40022000 	.word	0x40022000

080004ec <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004ec:	b580      	push	{r7, lr}
 80004ee:	b086      	sub	sp, #24
 80004f0:	af00      	add	r7, sp, #0
 80004f2:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 80004f4:	2300      	movs	r3, #0
 80004f6:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	2101      	movs	r1, #1
 80004fe:	4618      	mov	r0, r3
 8000500:	f7ff ff0c 	bl	800031c <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	795b      	ldrb	r3, [r3, #5]
 8000508:	2b03      	cmp	r3, #3
 800050a:	d820      	bhi.n	800054e <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	795b      	ldrb	r3, [r3, #5]
 8000510:	461a      	mov	r2, r3
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	791b      	ldrb	r3, [r3, #4]
 8000516:	005b      	lsls	r3, r3, #1
 8000518:	fa02 f303 	lsl.w	r3, r2, r3
 800051c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	681a      	ldr	r2, [r3, #0]
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	791b      	ldrb	r3, [r3, #4]
 8000528:	005b      	lsls	r3, r3, #1
 800052a:	2103      	movs	r1, #3
 800052c:	fa01 f303 	lsl.w	r3, r1, r3
 8000530:	43db      	mvns	r3, r3
 8000532:	4619      	mov	r1, r3
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	400a      	ands	r2, r1
 800053a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	6819      	ldr	r1, [r3, #0]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	697a      	ldr	r2, [r7, #20]
 8000548:	430a      	orrs	r2, r1
 800054a:	601a      	str	r2, [r3, #0]
 800054c:	e0cb      	b.n	80006e6 <GPIO_Init+0x1fa>

	}else
	{
		//this part will code later . ( interrupt mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	795b      	ldrb	r3, [r3, #5]
 8000552:	2b04      	cmp	r3, #4
 8000554:	d117      	bne.n	8000586 <GPIO_Init+0x9a>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000556:	4b4b      	ldr	r3, [pc, #300]	; (8000684 <GPIO_Init+0x198>)
 8000558:	68db      	ldr	r3, [r3, #12]
 800055a:	687a      	ldr	r2, [r7, #4]
 800055c:	7912      	ldrb	r2, [r2, #4]
 800055e:	4611      	mov	r1, r2
 8000560:	2201      	movs	r2, #1
 8000562:	408a      	lsls	r2, r1
 8000564:	4611      	mov	r1, r2
 8000566:	4a47      	ldr	r2, [pc, #284]	; (8000684 <GPIO_Init+0x198>)
 8000568:	430b      	orrs	r3, r1
 800056a:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800056c:	4b45      	ldr	r3, [pc, #276]	; (8000684 <GPIO_Init+0x198>)
 800056e:	689b      	ldr	r3, [r3, #8]
 8000570:	687a      	ldr	r2, [r7, #4]
 8000572:	7912      	ldrb	r2, [r2, #4]
 8000574:	4611      	mov	r1, r2
 8000576:	2201      	movs	r2, #1
 8000578:	408a      	lsls	r2, r1
 800057a:	43d2      	mvns	r2, r2
 800057c:	4611      	mov	r1, r2
 800057e:	4a41      	ldr	r2, [pc, #260]	; (8000684 <GPIO_Init+0x198>)
 8000580:	400b      	ands	r3, r1
 8000582:	6093      	str	r3, [r2, #8]
 8000584:	e035      	b.n	80005f2 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	795b      	ldrb	r3, [r3, #5]
 800058a:	2b05      	cmp	r3, #5
 800058c:	d117      	bne.n	80005be <GPIO_Init+0xd2>
		{
			//1 . configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800058e:	4b3d      	ldr	r3, [pc, #244]	; (8000684 <GPIO_Init+0x198>)
 8000590:	689b      	ldr	r3, [r3, #8]
 8000592:	687a      	ldr	r2, [r7, #4]
 8000594:	7912      	ldrb	r2, [r2, #4]
 8000596:	4611      	mov	r1, r2
 8000598:	2201      	movs	r2, #1
 800059a:	408a      	lsls	r2, r1
 800059c:	4611      	mov	r1, r2
 800059e:	4a39      	ldr	r2, [pc, #228]	; (8000684 <GPIO_Init+0x198>)
 80005a0:	430b      	orrs	r3, r1
 80005a2:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a4:	4b37      	ldr	r3, [pc, #220]	; (8000684 <GPIO_Init+0x198>)
 80005a6:	68db      	ldr	r3, [r3, #12]
 80005a8:	687a      	ldr	r2, [r7, #4]
 80005aa:	7912      	ldrb	r2, [r2, #4]
 80005ac:	4611      	mov	r1, r2
 80005ae:	2201      	movs	r2, #1
 80005b0:	408a      	lsls	r2, r1
 80005b2:	43d2      	mvns	r2, r2
 80005b4:	4611      	mov	r1, r2
 80005b6:	4a33      	ldr	r2, [pc, #204]	; (8000684 <GPIO_Init+0x198>)
 80005b8:	400b      	ands	r3, r1
 80005ba:	60d3      	str	r3, [r2, #12]
 80005bc:	e019      	b.n	80005f2 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT )
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	795b      	ldrb	r3, [r3, #5]
 80005c2:	2b06      	cmp	r3, #6
 80005c4:	d115      	bne.n	80005f2 <GPIO_Init+0x106>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c6:	4b2f      	ldr	r3, [pc, #188]	; (8000684 <GPIO_Init+0x198>)
 80005c8:	689b      	ldr	r3, [r3, #8]
 80005ca:	687a      	ldr	r2, [r7, #4]
 80005cc:	7912      	ldrb	r2, [r2, #4]
 80005ce:	4611      	mov	r1, r2
 80005d0:	2201      	movs	r2, #1
 80005d2:	408a      	lsls	r2, r1
 80005d4:	4611      	mov	r1, r2
 80005d6:	4a2b      	ldr	r2, [pc, #172]	; (8000684 <GPIO_Init+0x198>)
 80005d8:	430b      	orrs	r3, r1
 80005da:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005dc:	4b29      	ldr	r3, [pc, #164]	; (8000684 <GPIO_Init+0x198>)
 80005de:	68db      	ldr	r3, [r3, #12]
 80005e0:	687a      	ldr	r2, [r7, #4]
 80005e2:	7912      	ldrb	r2, [r2, #4]
 80005e4:	4611      	mov	r1, r2
 80005e6:	2201      	movs	r2, #1
 80005e8:	408a      	lsls	r2, r1
 80005ea:	4611      	mov	r1, r2
 80005ec:	4a25      	ldr	r2, [pc, #148]	; (8000684 <GPIO_Init+0x198>)
 80005ee:	430b      	orrs	r3, r1
 80005f0:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	791b      	ldrb	r3, [r3, #4]
 80005f6:	089b      	lsrs	r3, r3, #2
 80005f8:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	791b      	ldrb	r3, [r3, #4]
 80005fe:	f003 0303 	and.w	r3, r3, #3
 8000602:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4a1f      	ldr	r2, [pc, #124]	; (8000688 <GPIO_Init+0x19c>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d04e      	beq.n	80006ac <GPIO_Init+0x1c0>
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a1e      	ldr	r2, [pc, #120]	; (800068c <GPIO_Init+0x1a0>)
 8000614:	4293      	cmp	r3, r2
 8000616:	d032      	beq.n	800067e <GPIO_Init+0x192>
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	4a1c      	ldr	r2, [pc, #112]	; (8000690 <GPIO_Init+0x1a4>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d02b      	beq.n	800067a <GPIO_Init+0x18e>
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	4a1b      	ldr	r2, [pc, #108]	; (8000694 <GPIO_Init+0x1a8>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d024      	beq.n	8000676 <GPIO_Init+0x18a>
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	4a19      	ldr	r2, [pc, #100]	; (8000698 <GPIO_Init+0x1ac>)
 8000632:	4293      	cmp	r3, r2
 8000634:	d01d      	beq.n	8000672 <GPIO_Init+0x186>
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	4a18      	ldr	r2, [pc, #96]	; (800069c <GPIO_Init+0x1b0>)
 800063c:	4293      	cmp	r3, r2
 800063e:	d016      	beq.n	800066e <GPIO_Init+0x182>
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	4a16      	ldr	r2, [pc, #88]	; (80006a0 <GPIO_Init+0x1b4>)
 8000646:	4293      	cmp	r3, r2
 8000648:	d00f      	beq.n	800066a <GPIO_Init+0x17e>
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	4a15      	ldr	r2, [pc, #84]	; (80006a4 <GPIO_Init+0x1b8>)
 8000650:	4293      	cmp	r3, r2
 8000652:	d008      	beq.n	8000666 <GPIO_Init+0x17a>
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	4a13      	ldr	r2, [pc, #76]	; (80006a8 <GPIO_Init+0x1bc>)
 800065a:	4293      	cmp	r3, r2
 800065c:	d101      	bne.n	8000662 <GPIO_Init+0x176>
 800065e:	2308      	movs	r3, #8
 8000660:	e025      	b.n	80006ae <GPIO_Init+0x1c2>
 8000662:	2300      	movs	r3, #0
 8000664:	e023      	b.n	80006ae <GPIO_Init+0x1c2>
 8000666:	2307      	movs	r3, #7
 8000668:	e021      	b.n	80006ae <GPIO_Init+0x1c2>
 800066a:	2306      	movs	r3, #6
 800066c:	e01f      	b.n	80006ae <GPIO_Init+0x1c2>
 800066e:	2305      	movs	r3, #5
 8000670:	e01d      	b.n	80006ae <GPIO_Init+0x1c2>
 8000672:	2304      	movs	r3, #4
 8000674:	e01b      	b.n	80006ae <GPIO_Init+0x1c2>
 8000676:	2303      	movs	r3, #3
 8000678:	e019      	b.n	80006ae <GPIO_Init+0x1c2>
 800067a:	2302      	movs	r3, #2
 800067c:	e017      	b.n	80006ae <GPIO_Init+0x1c2>
 800067e:	2301      	movs	r3, #1
 8000680:	e015      	b.n	80006ae <GPIO_Init+0x1c2>
 8000682:	bf00      	nop
 8000684:	40013c00 	.word	0x40013c00
 8000688:	40020000 	.word	0x40020000
 800068c:	40020400 	.word	0x40020400
 8000690:	40020800 	.word	0x40020800
 8000694:	40020c00 	.word	0x40020c00
 8000698:	40021000 	.word	0x40021000
 800069c:	40021400 	.word	0x40021400
 80006a0:	40021800 	.word	0x40021800
 80006a4:	40021c00 	.word	0x40021c00
 80006a8:	40022000 	.word	0x40022000
 80006ac:	2300      	movs	r3, #0
 80006ae:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 80006b0:	4b59      	ldr	r3, [pc, #356]	; (8000818 <GPIO_Init+0x32c>)
 80006b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006b4:	4a58      	ldr	r2, [pc, #352]	; (8000818 <GPIO_Init+0x32c>)
 80006b6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80006ba:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 80006bc:	7c7a      	ldrb	r2, [r7, #17]
 80006be:	7cbb      	ldrb	r3, [r7, #18]
 80006c0:	009b      	lsls	r3, r3, #2
 80006c2:	fa02 f103 	lsl.w	r1, r2, r3
 80006c6:	4a55      	ldr	r2, [pc, #340]	; (800081c <GPIO_Init+0x330>)
 80006c8:	7cfb      	ldrb	r3, [r7, #19]
 80006ca:	3302      	adds	r3, #2
 80006cc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80006d0:	4b53      	ldr	r3, [pc, #332]	; (8000820 <GPIO_Init+0x334>)
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	687a      	ldr	r2, [r7, #4]
 80006d6:	7912      	ldrb	r2, [r2, #4]
 80006d8:	4611      	mov	r1, r2
 80006da:	2201      	movs	r2, #1
 80006dc:	408a      	lsls	r2, r1
 80006de:	4611      	mov	r1, r2
 80006e0:	4a4f      	ldr	r2, [pc, #316]	; (8000820 <GPIO_Init+0x334>)
 80006e2:	430b      	orrs	r3, r1
 80006e4:	6013      	str	r3, [r2, #0]
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	799b      	ldrb	r3, [r3, #6]
 80006ea:	461a      	mov	r2, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	791b      	ldrb	r3, [r3, #4]
 80006f0:	005b      	lsls	r3, r3, #1
 80006f2:	fa02 f303 	lsl.w	r3, r2, r3
 80006f6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	689a      	ldr	r2, [r3, #8]
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	791b      	ldrb	r3, [r3, #4]
 8000702:	005b      	lsls	r3, r3, #1
 8000704:	2103      	movs	r1, #3
 8000706:	fa01 f303 	lsl.w	r3, r1, r3
 800070a:	43db      	mvns	r3, r3
 800070c:	4619      	mov	r1, r3
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	681b      	ldr	r3, [r3, #0]
 8000712:	400a      	ands	r2, r1
 8000714:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	6899      	ldr	r1, [r3, #8]
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	697a      	ldr	r2, [r7, #20]
 8000722:	430a      	orrs	r2, r1
 8000724:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	79db      	ldrb	r3, [r3, #7]
 800072a:	461a      	mov	r2, r3
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	791b      	ldrb	r3, [r3, #4]
 8000730:	005b      	lsls	r3, r3, #1
 8000732:	fa02 f303 	lsl.w	r3, r2, r3
 8000736:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	681b      	ldr	r3, [r3, #0]
 800073c:	68da      	ldr	r2, [r3, #12]
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	791b      	ldrb	r3, [r3, #4]
 8000742:	005b      	lsls	r3, r3, #1
 8000744:	2103      	movs	r1, #3
 8000746:	fa01 f303 	lsl.w	r3, r1, r3
 800074a:	43db      	mvns	r3, r3
 800074c:	4619      	mov	r1, r3
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	681b      	ldr	r3, [r3, #0]
 8000752:	400a      	ands	r2, r1
 8000754:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	681b      	ldr	r3, [r3, #0]
 800075a:	68d9      	ldr	r1, [r3, #12]
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	697a      	ldr	r2, [r7, #20]
 8000762:	430a      	orrs	r2, r1
 8000764:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	7a1b      	ldrb	r3, [r3, #8]
 800076a:	461a      	mov	r2, r3
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	791b      	ldrb	r3, [r3, #4]
 8000770:	fa02 f303 	lsl.w	r3, r2, r3
 8000774:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	685a      	ldr	r2, [r3, #4]
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	791b      	ldrb	r3, [r3, #4]
 8000780:	4619      	mov	r1, r3
 8000782:	2301      	movs	r3, #1
 8000784:	408b      	lsls	r3, r1
 8000786:	43db      	mvns	r3, r3
 8000788:	4619      	mov	r1, r3
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	400a      	ands	r2, r1
 8000790:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	6859      	ldr	r1, [r3, #4]
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	697a      	ldr	r2, [r7, #20]
 800079e:	430a      	orrs	r2, r1
 80007a0:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	795b      	ldrb	r3, [r3, #5]
 80007a6:	2b02      	cmp	r3, #2
 80007a8:	d131      	bne.n	800080e <GPIO_Init+0x322>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	791b      	ldrb	r3, [r3, #4]
 80007ae:	08db      	lsrs	r3, r3, #3
 80007b0:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 80007b2:	687b      	ldr	r3, [r7, #4]
 80007b4:	791b      	ldrb	r3, [r3, #4]
 80007b6:	f003 0307 	and.w	r3, r3, #7
 80007ba:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	7c3a      	ldrb	r2, [r7, #16]
 80007c2:	3208      	adds	r2, #8
 80007c4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007c8:	7bfb      	ldrb	r3, [r7, #15]
 80007ca:	009b      	lsls	r3, r3, #2
 80007cc:	220f      	movs	r2, #15
 80007ce:	fa02 f303 	lsl.w	r3, r2, r3
 80007d2:	43db      	mvns	r3, r3
 80007d4:	4618      	mov	r0, r3
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	7c3a      	ldrb	r2, [r7, #16]
 80007dc:	4001      	ands	r1, r0
 80007de:	3208      	adds	r2, #8
 80007e0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	681b      	ldr	r3, [r3, #0]
 80007e8:	7c3a      	ldrb	r2, [r7, #16]
 80007ea:	3208      	adds	r2, #8
 80007ec:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007f0:	687b      	ldr	r3, [r7, #4]
 80007f2:	7a5b      	ldrb	r3, [r3, #9]
 80007f4:	461a      	mov	r2, r3
 80007f6:	7bfb      	ldrb	r3, [r7, #15]
 80007f8:	009b      	lsls	r3, r3, #2
 80007fa:	fa02 f303 	lsl.w	r3, r2, r3
 80007fe:	4618      	mov	r0, r3
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	7c3a      	ldrb	r2, [r7, #16]
 8000806:	4301      	orrs	r1, r0
 8000808:	3208      	adds	r2, #8
 800080a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 800080e:	bf00      	nop
 8000810:	3718      	adds	r7, #24
 8000812:	46bd      	mov	sp, r7
 8000814:	bd80      	pop	{r7, pc}
 8000816:	bf00      	nop
 8000818:	40023800 	.word	0x40023800
 800081c:	40013800 	.word	0x40013800
 8000820:	40013c00 	.word	0x40013c00

08000824 <GPIO_WriteToOutputPin>:
 *
 * @Note              -

 */
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 8000824:	b480      	push	{r7}
 8000826:	b083      	sub	sp, #12
 8000828:	af00      	add	r7, sp, #0
 800082a:	6078      	str	r0, [r7, #4]
 800082c:	460b      	mov	r3, r1
 800082e:	70fb      	strb	r3, [r7, #3]
 8000830:	4613      	mov	r3, r2
 8000832:	70bb      	strb	r3, [r7, #2]

	if(Value == GPIO_PIN_SET)
 8000834:	78bb      	ldrb	r3, [r7, #2]
 8000836:	2b01      	cmp	r3, #1
 8000838:	d109      	bne.n	800084e <GPIO_WriteToOutputPin+0x2a>
	{
		//write 1 to the output data register at the bit field corresponding to the pin number
		pGPIOx->ODR |= ( 1 << PinNumber);
 800083a:	687b      	ldr	r3, [r7, #4]
 800083c:	695b      	ldr	r3, [r3, #20]
 800083e:	78fa      	ldrb	r2, [r7, #3]
 8000840:	2101      	movs	r1, #1
 8000842:	fa01 f202 	lsl.w	r2, r1, r2
 8000846:	431a      	orrs	r2, r3
 8000848:	687b      	ldr	r3, [r7, #4]
 800084a:	615a      	str	r2, [r3, #20]
	}else
	{
		//write 0
		pGPIOx->ODR &= ~( 1 << PinNumber);
	}
}
 800084c:	e009      	b.n	8000862 <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~( 1 << PinNumber);
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	695b      	ldr	r3, [r3, #20]
 8000852:	78fa      	ldrb	r2, [r7, #3]
 8000854:	2101      	movs	r1, #1
 8000856:	fa01 f202 	lsl.w	r2, r1, r2
 800085a:	43d2      	mvns	r2, r2
 800085c:	401a      	ands	r2, r3
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	615a      	str	r2, [r3, #20]
}
 8000862:	bf00      	nop
 8000864:	370c      	adds	r7, #12
 8000866:	46bd      	mov	sp, r7
 8000868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800086c:	4770      	bx	lr

0800086e <GPIO_ToggleOutputPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800086e:	b480      	push	{r7}
 8000870:	b083      	sub	sp, #12
 8000872:	af00      	add	r7, sp, #0
 8000874:	6078      	str	r0, [r7, #4]
 8000876:	460b      	mov	r3, r1
 8000878:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber);
 800087a:	687b      	ldr	r3, [r7, #4]
 800087c:	695b      	ldr	r3, [r3, #20]
 800087e:	78fa      	ldrb	r2, [r7, #3]
 8000880:	2101      	movs	r1, #1
 8000882:	fa01 f202 	lsl.w	r2, r1, r2
 8000886:	405a      	eors	r2, r3
 8000888:	687b      	ldr	r3, [r7, #4]
 800088a:	615a      	str	r2, [r3, #20]
}
 800088c:	bf00      	nop
 800088e:	370c      	adds	r7, #12
 8000890:	46bd      	mov	sp, r7
 8000892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000896:	4770      	bx	lr

08000898 <GPIO_IRQInterruptConfig>:
 *
 * @Note              -

 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000898:	b480      	push	{r7}
 800089a:	b083      	sub	sp, #12
 800089c:	af00      	add	r7, sp, #0
 800089e:	4603      	mov	r3, r0
 80008a0:	460a      	mov	r2, r1
 80008a2:	71fb      	strb	r3, [r7, #7]
 80008a4:	4613      	mov	r3, r2
 80008a6:	71bb      	strb	r3, [r7, #6]

	if(EnorDi == ENABLE)
 80008a8:	79bb      	ldrb	r3, [r7, #6]
 80008aa:	2b01      	cmp	r3, #1
 80008ac:	d133      	bne.n	8000916 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 80008ae:	79fb      	ldrb	r3, [r7, #7]
 80008b0:	2b1f      	cmp	r3, #31
 80008b2:	d80a      	bhi.n	80008ca <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 80008b4:	4b35      	ldr	r3, [pc, #212]	; (800098c <GPIO_IRQInterruptConfig+0xf4>)
 80008b6:	681b      	ldr	r3, [r3, #0]
 80008b8:	79fa      	ldrb	r2, [r7, #7]
 80008ba:	2101      	movs	r1, #1
 80008bc:	fa01 f202 	lsl.w	r2, r1, r2
 80008c0:	4611      	mov	r1, r2
 80008c2:	4a32      	ldr	r2, [pc, #200]	; (800098c <GPIO_IRQInterruptConfig+0xf4>)
 80008c4:	430b      	orrs	r3, r1
 80008c6:	6013      	str	r3, [r2, #0]
			//program ICER2 register
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}

}
 80008c8:	e059      	b.n	800097e <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 ) //32 to 63
 80008ca:	79fb      	ldrb	r3, [r7, #7]
 80008cc:	2b1f      	cmp	r3, #31
 80008ce:	d90f      	bls.n	80008f0 <GPIO_IRQInterruptConfig+0x58>
 80008d0:	79fb      	ldrb	r3, [r7, #7]
 80008d2:	2b3f      	cmp	r3, #63	; 0x3f
 80008d4:	d80c      	bhi.n	80008f0 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 80008d6:	4b2e      	ldr	r3, [pc, #184]	; (8000990 <GPIO_IRQInterruptConfig+0xf8>)
 80008d8:	681b      	ldr	r3, [r3, #0]
 80008da:	79fa      	ldrb	r2, [r7, #7]
 80008dc:	f002 021f 	and.w	r2, r2, #31
 80008e0:	2101      	movs	r1, #1
 80008e2:	fa01 f202 	lsl.w	r2, r1, r2
 80008e6:	4611      	mov	r1, r2
 80008e8:	4a29      	ldr	r2, [pc, #164]	; (8000990 <GPIO_IRQInterruptConfig+0xf8>)
 80008ea:	430b      	orrs	r3, r1
 80008ec:	6013      	str	r3, [r2, #0]
 80008ee:	e046      	b.n	800097e <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 80008f0:	79fb      	ldrb	r3, [r7, #7]
 80008f2:	2b3f      	cmp	r3, #63	; 0x3f
 80008f4:	d943      	bls.n	800097e <GPIO_IRQInterruptConfig+0xe6>
 80008f6:	79fb      	ldrb	r3, [r7, #7]
 80008f8:	2b5f      	cmp	r3, #95	; 0x5f
 80008fa:	d840      	bhi.n	800097e <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 80008fc:	4b25      	ldr	r3, [pc, #148]	; (8000994 <GPIO_IRQInterruptConfig+0xfc>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	79fa      	ldrb	r2, [r7, #7]
 8000902:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000906:	2101      	movs	r1, #1
 8000908:	fa01 f202 	lsl.w	r2, r1, r2
 800090c:	4611      	mov	r1, r2
 800090e:	4a21      	ldr	r2, [pc, #132]	; (8000994 <GPIO_IRQInterruptConfig+0xfc>)
 8000910:	430b      	orrs	r3, r1
 8000912:	6013      	str	r3, [r2, #0]
}
 8000914:	e033      	b.n	800097e <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 8000916:	79fb      	ldrb	r3, [r7, #7]
 8000918:	2b1f      	cmp	r3, #31
 800091a:	d80a      	bhi.n	8000932 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 800091c:	4b1e      	ldr	r3, [pc, #120]	; (8000998 <GPIO_IRQInterruptConfig+0x100>)
 800091e:	681b      	ldr	r3, [r3, #0]
 8000920:	79fa      	ldrb	r2, [r7, #7]
 8000922:	2101      	movs	r1, #1
 8000924:	fa01 f202 	lsl.w	r2, r1, r2
 8000928:	4611      	mov	r1, r2
 800092a:	4a1b      	ldr	r2, [pc, #108]	; (8000998 <GPIO_IRQInterruptConfig+0x100>)
 800092c:	430b      	orrs	r3, r1
 800092e:	6013      	str	r3, [r2, #0]
}
 8000930:	e025      	b.n	800097e <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 )
 8000932:	79fb      	ldrb	r3, [r7, #7]
 8000934:	2b1f      	cmp	r3, #31
 8000936:	d90f      	bls.n	8000958 <GPIO_IRQInterruptConfig+0xc0>
 8000938:	79fb      	ldrb	r3, [r7, #7]
 800093a:	2b3f      	cmp	r3, #63	; 0x3f
 800093c:	d80c      	bhi.n	8000958 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 800093e:	4b17      	ldr	r3, [pc, #92]	; (800099c <GPIO_IRQInterruptConfig+0x104>)
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	79fa      	ldrb	r2, [r7, #7]
 8000944:	f002 021f 	and.w	r2, r2, #31
 8000948:	2101      	movs	r1, #1
 800094a:	fa01 f202 	lsl.w	r2, r1, r2
 800094e:	4611      	mov	r1, r2
 8000950:	4a12      	ldr	r2, [pc, #72]	; (800099c <GPIO_IRQInterruptConfig+0x104>)
 8000952:	430b      	orrs	r3, r1
 8000954:	6013      	str	r3, [r2, #0]
 8000956:	e012      	b.n	800097e <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 8000958:	79fb      	ldrb	r3, [r7, #7]
 800095a:	2b3f      	cmp	r3, #63	; 0x3f
 800095c:	d90f      	bls.n	800097e <GPIO_IRQInterruptConfig+0xe6>
 800095e:	79fb      	ldrb	r3, [r7, #7]
 8000960:	2b5f      	cmp	r3, #95	; 0x5f
 8000962:	d80c      	bhi.n	800097e <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 8000964:	4b0e      	ldr	r3, [pc, #56]	; (80009a0 <GPIO_IRQInterruptConfig+0x108>)
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	79fa      	ldrb	r2, [r7, #7]
 800096a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800096e:	2101      	movs	r1, #1
 8000970:	fa01 f202 	lsl.w	r2, r1, r2
 8000974:	4611      	mov	r1, r2
 8000976:	4a0a      	ldr	r2, [pc, #40]	; (80009a0 <GPIO_IRQInterruptConfig+0x108>)
 8000978:	430b      	orrs	r3, r1
 800097a:	6013      	str	r3, [r2, #0]
}
 800097c:	e7ff      	b.n	800097e <GPIO_IRQInterruptConfig+0xe6>
 800097e:	bf00      	nop
 8000980:	370c      	adds	r7, #12
 8000982:	46bd      	mov	sp, r7
 8000984:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000988:	4770      	bx	lr
 800098a:	bf00      	nop
 800098c:	e000e100 	.word	0xe000e100
 8000990:	e000e104 	.word	0xe000e104
 8000994:	e000e108 	.word	0xe000e108
 8000998:	e000e180 	.word	0xe000e180
 800099c:	e000e184 	.word	0xe000e184
 80009a0:	e000e188 	.word	0xe000e188

080009a4 <GPIO_IRQPriorityConfig>:
 *
 * @Note              -

 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint32_t IRQPriority)
{
 80009a4:	b480      	push	{r7}
 80009a6:	b085      	sub	sp, #20
 80009a8:	af00      	add	r7, sp, #0
 80009aa:	4603      	mov	r3, r0
 80009ac:	6039      	str	r1, [r7, #0]
 80009ae:	71fb      	strb	r3, [r7, #7]
	//1. first lets find out the ipr register
	uint8_t iprx = IRQNumber / 4;
 80009b0:	79fb      	ldrb	r3, [r7, #7]
 80009b2:	089b      	lsrs	r3, r3, #2
 80009b4:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section  = IRQNumber %4 ;
 80009b6:	79fb      	ldrb	r3, [r7, #7]
 80009b8:	f003 0303 	and.w	r3, r3, #3
 80009bc:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = ( 8 * iprx_section) + ( 8 - NO_PR_BITS_IMPLEMENTED) ;
 80009be:	7bbb      	ldrb	r3, [r7, #14]
 80009c0:	00db      	lsls	r3, r3, #3
 80009c2:	b2db      	uxtb	r3, r3
 80009c4:	3304      	adds	r3, #4
 80009c6:	737b      	strb	r3, [r7, #13]

	*(  NVIC_PR_BASE_ADDR + iprx ) |=  ( IRQPriority << shift_amount );
 80009c8:	7bfb      	ldrb	r3, [r7, #15]
 80009ca:	009b      	lsls	r3, r3, #2
 80009cc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009d0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009d4:	6819      	ldr	r1, [r3, #0]
 80009d6:	7b7b      	ldrb	r3, [r7, #13]
 80009d8:	683a      	ldr	r2, [r7, #0]
 80009da:	409a      	lsls	r2, r3
 80009dc:	7bfb      	ldrb	r3, [r7, #15]
 80009de:	009b      	lsls	r3, r3, #2
 80009e0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009e4:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009e8:	430a      	orrs	r2, r1
 80009ea:	601a      	str	r2, [r3, #0]

}
 80009ec:	bf00      	nop
 80009ee:	3714      	adds	r7, #20
 80009f0:	46bd      	mov	sp, r7
 80009f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009f6:	4770      	bx	lr

080009f8 <GPIO_IRQHandling>:
 *
 * @Note              -

 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 80009f8:	b480      	push	{r7}
 80009fa:	b083      	sub	sp, #12
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	4603      	mov	r3, r0
 8000a00:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 8000a02:	4b0c      	ldr	r3, [pc, #48]	; (8000a34 <GPIO_IRQHandling+0x3c>)
 8000a04:	695b      	ldr	r3, [r3, #20]
 8000a06:	79fa      	ldrb	r2, [r7, #7]
 8000a08:	2101      	movs	r1, #1
 8000a0a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a0e:	4013      	ands	r3, r2
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d009      	beq.n	8000a28 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber);
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <GPIO_IRQHandling+0x3c>)
 8000a16:	695b      	ldr	r3, [r3, #20]
 8000a18:	79fa      	ldrb	r2, [r7, #7]
 8000a1a:	2101      	movs	r1, #1
 8000a1c:	fa01 f202 	lsl.w	r2, r1, r2
 8000a20:	4611      	mov	r1, r2
 8000a22:	4a04      	ldr	r2, [pc, #16]	; (8000a34 <GPIO_IRQHandling+0x3c>)
 8000a24:	430b      	orrs	r3, r1
 8000a26:	6153      	str	r3, [r2, #20]
	}

}
 8000a28:	bf00      	nop
 8000a2a:	370c      	adds	r7, #12
 8000a2c:	46bd      	mov	sp, r7
 8000a2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a32:	4770      	bx	lr
 8000a34:	40013c00 	.word	0x40013c00

08000a38 <__libc_init_array>:
 8000a38:	b570      	push	{r4, r5, r6, lr}
 8000a3a:	4d0d      	ldr	r5, [pc, #52]	; (8000a70 <__libc_init_array+0x38>)
 8000a3c:	4c0d      	ldr	r4, [pc, #52]	; (8000a74 <__libc_init_array+0x3c>)
 8000a3e:	1b64      	subs	r4, r4, r5
 8000a40:	10a4      	asrs	r4, r4, #2
 8000a42:	2600      	movs	r6, #0
 8000a44:	42a6      	cmp	r6, r4
 8000a46:	d109      	bne.n	8000a5c <__libc_init_array+0x24>
 8000a48:	4d0b      	ldr	r5, [pc, #44]	; (8000a78 <__libc_init_array+0x40>)
 8000a4a:	4c0c      	ldr	r4, [pc, #48]	; (8000a7c <__libc_init_array+0x44>)
 8000a4c:	f000 f820 	bl	8000a90 <_init>
 8000a50:	1b64      	subs	r4, r4, r5
 8000a52:	10a4      	asrs	r4, r4, #2
 8000a54:	2600      	movs	r6, #0
 8000a56:	42a6      	cmp	r6, r4
 8000a58:	d105      	bne.n	8000a66 <__libc_init_array+0x2e>
 8000a5a:	bd70      	pop	{r4, r5, r6, pc}
 8000a5c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a60:	4798      	blx	r3
 8000a62:	3601      	adds	r6, #1
 8000a64:	e7ee      	b.n	8000a44 <__libc_init_array+0xc>
 8000a66:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a6a:	4798      	blx	r3
 8000a6c:	3601      	adds	r6, #1
 8000a6e:	e7f2      	b.n	8000a56 <__libc_init_array+0x1e>
 8000a70:	08000aa8 	.word	0x08000aa8
 8000a74:	08000aa8 	.word	0x08000aa8
 8000a78:	08000aa8 	.word	0x08000aa8
 8000a7c:	08000aac 	.word	0x08000aac

08000a80 <memset>:
 8000a80:	4402      	add	r2, r0
 8000a82:	4603      	mov	r3, r0
 8000a84:	4293      	cmp	r3, r2
 8000a86:	d100      	bne.n	8000a8a <memset+0xa>
 8000a88:	4770      	bx	lr
 8000a8a:	f803 1b01 	strb.w	r1, [r3], #1
 8000a8e:	e7f9      	b.n	8000a84 <memset+0x4>

08000a90 <_init>:
 8000a90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a92:	bf00      	nop
 8000a94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a96:	bc08      	pop	{r3}
 8000a98:	469e      	mov	lr, r3
 8000a9a:	4770      	bx	lr

08000a9c <_fini>:
 8000a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a9e:	bf00      	nop
 8000aa0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000aa2:	bc08      	pop	{r3}
 8000aa4:	469e      	mov	lr, r3
 8000aa6:	4770      	bx	lr
